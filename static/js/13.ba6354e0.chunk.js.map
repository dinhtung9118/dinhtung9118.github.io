{"version":3,"sources":["stores/UseApi/useApi.ts","pages/CommonPage/index.tsx","components/Table/index.tsx","components/DatePicker/index.tsx","pages/ConsultationSchedule/ConsultaionWrapper/patientList.tsx","pages/ConsultationSchedule/index.tsx"],"names":["useApi","query","deps","loader","useLoaderActions","useState","state","setState","useCallback","useEffect","push","then","initParam","offset","limit","type","CommonPage","children","dataMappingFunction","advanceFilterList","InsideComponent","currentParam","setCurrentParam","result","data","get","renderedData","map","item","index","totals","handleOnAddAdvanceFilterField","params","indexOfParam","findIndex","p","label","newParam","value","CommonTable","stickyHeader","titleList","pathList","className","aria-label","titleElm","undefined","cellRender","align","minWidth","style","key","toString","length","slice","row","indexRow","hover","role","tabIndex","path","colSpan","useStyles","makeStyles","theme","createStyles","root","backgroundColor","palette","primary","main","datePicker","position","display","iconCalendar","fontSize","right","top","zIndex","containerDateRange","startDate","marginLeft","endDate","popperContainer","tooltip","left","transform","formControl","height","padding","fontWeight","lineHeight","color","backgroundClip","border","borderRadius","transition","DatePicker","dateFormat","onChange","dateValue","useCustomHeader","yearDropdownItemNumber","classes","setFocusDatePicker","Date","setValue","date","e","popperClassName","selected","width","container","maxHeight","margin","spacing","link","textDecoration","BootstrapInput","withStyles","marginTop","input","background","paper","fontFamily","join","borderColor","boxShadow","InputBase","ConsultationPatient","search","useLocation","replace","dateParam","parse","React","page","rowsPerPage","listWorkingtime","setListWorkingTime","currentBookingType","BookingStatus","NEW","currentBookingStatus","setBookingStatus","timeWorking","setTimeWorking","selectDate","setSelectDate","useAuthentication","listBookingStatus","lable","CONFIRMED","OUT_OF_DATE","CANCELED","COMPELETED","payload","doctorId","account","externalId","getDateTimeNumber","repoDoctor","getWorkingTime","rs","getStartTime","totalTime","Number","Math","floor","pad","configTimeDate","Box","ml","justifyContent","alignItems","InputLabel","FormControl","Select","labelId","id","event","target","MenuItem","status","mr","name","time","startTime","WorkingTime","minusFormat","from","endTime","to","TablePagination","rowsPerPageOptions","component","count","onChangePage","onChangeRowsPerPage","defaultPropsBorder","bgcolor","m","ConsultationSchedule","pages","useI18n","mapStatusToColor","mb","Typography","consultationSchedule","title","Paper","RouteList","bookingInfo","speciality","specialty","start","moment","format","code","getBookings"],"mappings":"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","file":"static/js/13.ba6354e0.chunk.js","sourcesContent":["import { useLoaderActions } from \"../loader\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nexport function useApi<R>(query: () => Promise<R>, deps: any[] = []) {\n  const loader = useLoaderActions();\n  const [state, setState] = useState<R | undefined>();\n  query = useCallback(query, deps);\n  useEffect(() => {\n    loader.push(query().then(setState));\n  }, [loader, query]);\n  return state;\n}\n","import React, { useState } from \"react\";\nimport { CommonPageProps, Params } from \"./CommonPage\";\nimport { useApi } from \"../../stores/UseApi/useApi\";\nimport get from \"lodash/get\";\n\nconst initParam = {\n  offset: 0,\n  limit: 50,\n  type: \"RE_EXAMINATION\",\n};\n\nconst CommonPage: React.FC<CommonPageProps> = ({\n  children,\n  dataMappingFunction,\n  query,\n  advanceFilterList,\n}) => {\n  const InsideComponent = children;\n  const [currentParam, setCurrentParam] = useState<Params>(initParam);\n  const result = useApi(() => query(currentParam), [currentParam]);\n  const data = get(result, \"data\", []);\n  const total = get(result, \"total\", []);\n  const handlerAdvanceFilter = (params: { label: string; value: any }[]) => {\n    params.map((params) => {\n      const indexOfParam = advanceFilterList.findIndex(\n        (p) => p === params.label,\n      );\n      if (indexOfParam !== -1) {\n        const newParam = currentParam;\n        newParam[advanceFilterList[indexOfParam]] = params.value;\n\n        if (!params.value || params.value === \"all\") {\n          delete newParam[advanceFilterList[indexOfParam]];\n          setCurrentParam({\n            ...newParam,\n          });\n        } else {\n          setCurrentParam({\n            ...newParam,\n          });\n        }\n      }\n    });\n  };\n\n  const renderedData =\n    data?.map((item: any, index: number) => dataMappingFunction(item, index)) ||\n    [];\n  return (\n    <>\n      <InsideComponent\n        data={renderedData}\n        totals={0}\n        handleOnAddAdvanceFilterField={handlerAdvanceFilter}\n      />\n    </>\n  );\n};\n\nexport default CommonPage;\n","import React from \"react\";\n\nimport {\n  Table,\n  TableBody,\n  TableContainer,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\n\nimport {\n  DataType,\n  TitleListType,\n  TitleWithClassName,\n  TTableProps,\n} from \"./Table.d\";\n\nconst CommonTable: React.FC<TTableProps> = ({\n  stickyHeader = true,\n  titleList,\n  data,\n  pathList,\n  children,\n  className,\n}) => {\n  const renderEmptyBody = () => {\n    return (\n      children || (\n        <TableRow>\n          <TableCell\n            align=\"center\"\n            colSpan={pathList!.length}\n            className=\"text-center\"\n          >\n            'NO_DATA'\n          </TableCell>\n        </TableRow>\n      )\n    );\n  };\n  return (\n    <TableContainer className={className}>\n      <Table stickyHeader={stickyHeader} aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            {titleList.map((titleElm: TitleListType, index: Number) => {\n              if ((titleElm as TitleWithClassName).className !== undefined) {\n                const {\n                  className,\n                  cellRender,\n                  align,\n                  minWidth,\n                } = titleElm as TitleWithClassName;\n                return (\n                  <TableCell\n                    style={{ minWidth: minWidth }}\n                    align={align}\n                    key={index.toString()}\n                    className={className}\n                  >\n                    {cellRender}\n                  </TableCell>\n                );\n              }\n              return (\n                <TableCell key={index.toString()} align=\"left\">\n                  {titleElm}\n                </TableCell>\n              );\n            })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.length\n            ? data.slice().map((row: DataType, indexRow) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={indexRow}>\n                    {pathList.map((path, index) => {\n                      return (\n                        <TableCell\n                          key={path}\n                          align={\n                            (titleList[index] as TitleWithClassName)?.align ||\n                            \"left\"\n                          }\n                        >\n                          {row[path] || \"\"}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })\n            : renderEmptyBody()}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default CommonTable;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core\";\nimport DateRangeOutlinedIcon from \"@material-ui/icons/DateRangeOutlined\";\nimport range from \"lodash/range\";\n\nimport {\n  DatePickerProps,\n  OptionalDatePickerProps,\n  CustomHeaderProps,\n} from \"./DateTimePicker\";\nimport { format, getMonth, getYear, isValid } from \"date-fns\";\nimport { DEFAULT_YEAR_DROPDOWN_ITEM } from \"../../constants\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    datePicker: {\n      position: \"relative\",\n      display: \"table-cell\",\n    },\n    iconCalendar: {\n      position: \"absolute\",\n      fontSize: \"24px\",\n      right: \"3px\",\n      top: \"7px\",\n      zIndex: 2,\n    },\n    containerDateRange: {\n      display: \"flex\",\n    },\n    startDate: {\n      marginLeft: 2,\n    },\n    endDate: {\n      marginLeft: 2,\n    },\n    popperContainer: {\n      zIndex: theme.zIndex.tooltip,\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      transform: \"translate3d(0px, 36px, 0px)\",\n    },\n    formControl: {\n      display: \"block\",\n      height: \"calc(1em + 0.75rem + 2px)\",\n      padding: \"0.375rem 0.75rem\",\n      fontSize: \" 0.875rem\",\n      fontWeight: 400,\n      lineHeight: 1.6,\n      color: \"#353c48\",\n      backgroundColor: \"#F9FAFC\",\n      backgroundClip: \"padding-box\",\n      border: \"1px solid #DEE2E6\",\n      borderRadius: \"0.25rem\",\n      transition:\n        \"border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out\",\n    },\n    \".react-datepicker__input-container \": {\n      \"&::before\": {\n        left: \"3px\",\n      },\n    },\n  }),\n);\ntype TDatePicker = OptionalDatePickerProps & DatePickerProps;\n\nconst DatePicker: React.FC<TDatePicker> = ({\n  dateFormat,\n  onChange,\n  useCustomHeader,\n  yearDropdownItemNumber = DEFAULT_YEAR_DROPDOWN_ITEM,\n  dateValue,\n}) => {\n  const classes = useStyles();\n  const [isFocusDatePicker, setFocusDatePicker] = useState(false);\n  const [value, setValue] = useState(new Date());\n  useEffect(() => {\n    dateValue && setValue(dateValue);\n  }, [dateValue]);\n\n  const handleChangeDate = (\n    date: Date,\n    e: React.SyntheticEvent<any> | undefined,\n  ) => {\n    setFocusDatePicker(false);\n    onChange && onChange(date, e);\n  };\n\n  return (\n    <div className={classes.datePicker}>\n      <ReactDatePicker\n        className={classes.formControl}\n        onChange={handleChangeDate}\n        popperClassName={classes.popperContainer}\n        selected={value}\n      />\n      <DateRangeOutlinedIcon className={classes.iconCalendar} />\n    </div>\n  );\n};\n\nexport default DatePicker;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  TablePagination,\n  makeStyles,\n  Box,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  withStyles,\n  Theme,\n  createStyles,\n  InputBase,\n} from \"@material-ui/core\";\n\nimport { ChildrenProps } from \"../../CommonPage/CommonPage\";\nimport CommonTable from \"components/Table\";\nimport { TitleWithClassName } from \"components/Table/Table\";\nimport { WorkingTime } from \"models/workingTime\";\nimport DatePicker from \"components/DatePicker\";\nimport { BookingStatus } from \"../../../constants/enums\";\nimport { ISession } from \"../../../models/workingTime\";\nimport { configTimeDate, getDateTimeNumber } from \"../../../utils/Date\";\nimport { doctor as repoDoctor } from \"../../../services/repos\";\nimport useAuthentication from \"../../../stores/authenticationsStore/authentication\";\nimport { useLocation } from \"react-router\";\nimport get from \"lodash/get\";\nimport { parse } from \"querystring\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    container: {\n      maxHeight: 550,\n    },\n    margin: {\n      display: \"flex\",\n      margin: theme.spacing(1),\n    },\n    link: {\n      textDecoration: \"none\",\n    },\n  }),\n);\n\nconst BootstrapInput = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"label + &\": {\n        marginTop: theme.spacing(0),\n      },\n    },\n    input: {\n      borderRadius: 4,\n      position: \"relative\",\n      backgroundColor: theme.palette.background.paper,\n      border: \"1px solid #ced4da\",\n      fontSize: 16,\n      padding: \"10px 26px 10px 12px\",\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n      \"&:focus\": {\n        borderRadius: 4,\n        borderColor: \"#80bdff\",\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n      },\n    },\n  }),\n)(InputBase);\n\nconst ConsultationPatient: React.FC<ChildrenProps> = ({\n  data,\n  totals,\n  handleOnAddAdvanceFilterField,\n}) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const search = location.search.replace(\"?\", \"\");\n  const dateParam = get(parse(search), \"date\", \"\") as string;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [listWorkingtime, setListWorkingTime] = useState<ISession[]>([]);\n  const [currentBookingType, setBookingType] = useState<string>(\"CONSULTATION\");\n  const [currentBookingStatus, setBookingStatus] = useState<string>(\n    BookingStatus.NEW,\n  );\n  const [timeWorking, setTimeWorking] = useState<string | number>(\"all\");\n  const [selectDate, setSelectDate] = useState(new Date());\n  const [state] = useAuthentication();\n  const listBookingStatus = [\n    { value: BookingStatus.NEW, lable: \"New\" },\n    { value: BookingStatus.CONFIRMED, lable: \"Confirmed\" },\n    { value: BookingStatus.OUT_OF_DATE, lable: \"Out of Date\" },\n    { value: BookingStatus.CANCELED, lable: \"Canceled\" },\n    { value: BookingStatus.COMPELETED, lable: \"Compeleted\" },\n  ];\n\n  const titleList: TitleWithClassName[] = [\n    {\n      className: \"\",\n      cellRender: \"ID\",\n      align: \"left\",\n      minWidth: 120,\n    },\n    {\n      className: \"\",\n      cellRender: \"Name Patient\",\n      align: \"left\",\n      minWidth: 120,\n    },\n    {\n      className: \"\",\n      cellRender: \"Code Patient Consultation\",\n      align: \"left\",\n      minWidth: 120,\n    },\n    {\n      className: \"\",\n      cellRender: \"Specitialy\",\n      align: \"left\",\n      minWidth: 120,\n    },\n    {\n      className: \"\",\n      cellRender: \"Time Consultation\",\n      align: \"left\",\n      minWidth: 120,\n    },\n    {\n      className: \"\",\n      cellRender: \"Status\",\n      align: \"left\",\n      minWidth: 120,\n    },\n  ];\n  const pathList = [\"id\", \"name\", \"code\", \"speciality\", \"start\", \"status\"];\n\n  const handleChangePage = () => {};\n  const handleChangeRowsPerPage = () => {};\n  useEffect(() => {\n    dateParam && setSelectDate(new Date(dateParam));\n  }, [dateParam]);\n  useEffect(() => {\n    const payload = {\n      doctorId: state.account.externalId,\n      offset: 0,\n      limit: 250,\n      date: getDateTimeNumber(selectDate),\n    };\n    repoDoctor.getWorkingTime(payload).then((rs) => {\n      if (rs.data && rs.data.length > 0) {\n        setListWorkingTime(rs?.data || []);\n      }\n    });\n  }, []);\n\n  const getStartTime = () => {\n    const hours = Number(Math.floor(Number(timeWorking) / 60).pad(2));\n    const min = Number((Number(timeWorking) % 60).pad(2));\n    const totalTime = hours * 60 * 60 + min * 60;\n    return getDateTimeNumber(selectDate) + totalTime * configTimeDate;\n  };\n\n  useEffect(() => {\n    handleOnAddAdvanceFilterField &&\n      handleOnAddAdvanceFilterField([\n        {\n          label: \"status\",\n          value: currentBookingStatus,\n        },\n        {\n          label: \"type\",\n          value: currentBookingType,\n        },\n        {\n          label: \"start\",\n          value: timeWorking === \"all\" ? \"all\" : getStartTime(),\n        },\n      ]);\n  }, [currentBookingStatus, selectDate, currentBookingType, timeWorking]);\n\n  const handlerOnChangeDateTime = (\n    date: Date,\n    e: React.SyntheticEvent<any> | undefined,\n  ) => {\n    setSelectDate(date);\n  };\n\n  const handleChangeTime = (\n    event: React.ChangeEvent<{ value: unknown | unknown }>,\n  ) => {\n    setTimeWorking(event.target.value as string);\n  };\n  const handleChangeStatus = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setBookingStatus(event.target.value as string);\n  };\n\n  return (\n    <>\n      <Box ml={1} display=\"flex\" justifyContent=\"space-between\">\n        <Box display=\"flex\">\n          <Box minWidth={80} display=\"flex\" alignItems=\"center\" ml={2}>\n            <InputLabel>Status:</InputLabel>\n            <FormControl className={classes.margin}>\n              <Select\n                labelId=\"status-booking-label\"\n                id=\"status-booking-select\"\n                value={currentBookingStatus}\n                onChange={handleChangeStatus}\n                input={<BootstrapInput />}\n              >\n                <MenuItem value=\"all\">All</MenuItem>\n                {listBookingStatus.length > 0 &&\n                  listBookingStatus.map((status) => {\n                    return (\n                      <MenuItem value={status.value}>{status.lable}</MenuItem>\n                    );\n                  })}\n              </Select>\n            </FormControl>\n          </Box>\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          <Box display=\"flex\" alignItems=\"center\">\n            <Box mr={1}>\n              <InputLabel>Date Consulting</InputLabel>\n            </Box>\n            <DatePicker\n              name=\"Date\"\n              dateValue={selectDate}\n              onChange={handlerOnChangeDateTime}\n            />\n          </Box>\n          <Box minWidth={80} display=\"flex\" alignItems=\"center\" ml={2}>\n            <InputLabel>Time Consultations</InputLabel>\n            <FormControl className={classes.margin}>\n              <Select\n                labelId=\"demo-customized-select-label\"\n                id=\"demo-customized-select\"\n                value={timeWorking}\n                onChange={handleChangeTime}\n                input={<BootstrapInput />}\n              >\n                <MenuItem value=\"all\">All</MenuItem>\n                {listWorkingtime.length > 0 &&\n                  listWorkingtime.map((time) => {\n                    const startTime = WorkingTime.minusFormat(time.from);\n                    const endTime = WorkingTime.minusFormat(time.to);\n                    return (\n                      <MenuItem value={time.from}>\n                        {startTime} - {endTime}\n                      </MenuItem>\n                    );\n                  })}\n              </Select>\n            </FormControl>\n          </Box>\n        </Box>\n      </Box>\n      <CommonTable\n        className={classes.container}\n        data={data || []}\n        pathList={pathList}\n        titleList={titleList}\n        stickyHeader={true}\n      />\n      <TablePagination\n        rowsPerPageOptions={[25, 50, 100]}\n        component=\"div\"\n        count={data?.length || 0}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </>\n  );\n};\n\nexport default ConsultationPatient;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Box,\n  Typography,\n  Paper,\n  Theme,\n  createStyles,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { useI18n } from \"../../stores/Locale/LocaleStore\";\nimport CommonPage from \"../CommonPage\";\nimport ConsultationPatient from \"./ConsultaionWrapper/patientList\";\nimport { doctor as repoDoctor } from \"../../services/repos\";\n\nimport { BookingStatus } from \"../../constants/enums\";\nimport { Booking } from \"../../models/booking\";\nimport { RouteList } from \"../../routeList\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    container: {\n      maxHeight: 440,\n    },\n    margin: {\n      display: \"flex\",\n      margin: theme.spacing(1),\n    },\n    link: {\n      textDecoration: \"none\",\n    },\n  }),\n);\n\nconst defaultPropsBorder = {\n  bgcolor: \"background.paper.light\",\n  borderColor: \"text.primary.light\",\n  m: 1,\n  border: 3,\n  style: { width: 8, height: 8 },\n};\n\nconst ConsultationSchedule: React.FC = () => {\n  const classes = useStyles();\n  const i18n = useI18n();\n  const { pages } = i18n;\n  const advanceFilterValue = [\"start\", \"status\", \"type\"];\n\n  const mapStatusToColor = (status: BookingStatus | string) => {\n    switch (status) {\n      case BookingStatus.NEW:\n        return \"warning\";\n      case BookingStatus.COMPELETED:\n        return \"success\";\n      case BookingStatus.CONFIRMED:\n        return \"info\";\n      case BookingStatus.CANCELED:\n        return \"\";\n      default:\n        return \"\";\n    }\n  };\n\n  const dataMappingFunction = (item: Booking) => {\n    return {\n      ...item,\n      name: (\n        <Link\n          className={classes.link}\n          to={`${RouteList.bookingInfo}?bookingId=${item.id}`}\n        >\n          Patient Tung\n        </Link>\n      ),\n      speciality: item.specialty?.name || \"-\",\n      start: moment(item.start).format(\"hh:mm MM-DD-YYYY\"),\n      code: (\n        <Link\n          className={classes.link}\n          to={`${RouteList.bookingInfo}?bookingId=${item.id}`}\n        >\n          MC_00\n        </Link>\n      ),\n      status: (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"flex-start\">\n          <Box\n            {...defaultPropsBorder}\n            borderRadius=\"50%\"\n            borderColor={`${mapStatusToColor(item.status)}.light`}\n            bgcolor={`${mapStatusToColor(item.status)}.main`}\n          />\n          <Box>{item.status}</Box>\n        </Box>\n      ),\n    };\n  };\n\n  return (\n    <>\n      <Box\n        mb={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Typography component=\"div\">\n          <Box fontSize=\"h6.fontSize\" fontWeight=\"fontWeightMedium\">\n            {pages.consultationSchedule.title}\n          </Box>\n        </Typography>\n      </Box>\n      <Paper className={classes.root}>\n        <CommonPage\n          advanceFilterList={advanceFilterValue}\n          dataMappingFunction={dataMappingFunction}\n          query={repoDoctor.getBookings}\n        >\n          {ConsultationPatient}\n        </CommonPage>\n      </Paper>\n    </>\n  );\n};\n\nexport default ConsultationSchedule;\n"],"sourceRoot":""}