{"version":3,"sources":["../node_modules/@material-ui/core/esm/colors/deepOrange.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","pages/ConsultationSchedule/BookingInfo/index.tsx"],"names":["deepOrange","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","createSvgIcon","React","d","Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","name","defaultPropsBorder","bgcolor","borderColor","m","border","style","useStyles","makeStyles","padding","spacing","getContrastText","ctaAction","btnCancel","common","white","marginLeft","btnStatus","primary","main","light","BookingInfo","location","useLocation","enqueueSnackbar","useSnackbar","history","useHistory","search","replace","useLoader","loader","useState","bookingData","setBookingData","patient","setPatient","bookingId","get","parse","useEffect","push","repoDoctor","getBookingInfo","then","rs","Booking","userId","repoPatient","single","rs_p","mapStatusToColor","status","console","log","BookingStatus","NEW","COMPELETED","CONFIRMED","CANCELED","handleChangeStatus","payload","notes","updateStatusBooking","id","message","key","catch","e","container","item","md","mr","avatar","fullName","email","justify","onClick","ml","PROCESSING","pathname","RouteList","schedules","mt","mb","minWidth","pt","pb","diseaseCodes","join","description"],"mappings":"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","file":"static/js/15.3c5785bb.chunk.js","sourcesContent":["var deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { parse } from \"querystring\";\nimport { deepOrange } from \"@material-ui/core/colors\";\nimport {\n  Avatar,\n  Paper,\n  Box,\n  Grid,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport get from \"lodash/get\";\n\nimport { Booking } from \"models/booking\";\nimport { useLoader } from \"stores/loader\";\nimport { doctor as repoDoctor, patient as repoPatient } from \"services/repos\";\nimport { Patient } from \"models/patient\";\nimport { BookingStatus } from \"constants/enums\";\nimport { CloseButton } from \"components/Notistack\";\nimport { useSnackbar } from \"notistack\";\nimport { RouteList } from \"../../../routeList\";\n\nconst defaultPropsBorder = {\n  bgcolor: \"background.paper.light\",\n  borderColor: \"text.primary.light\",\n  m: 1,\n  border: 3,\n  style: { width: 8, height: 8 },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  square: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  ctaAction: {\n    display: \"flex\",\n  },\n  btnCancel: {\n    backgroundColor: theme.palette.grey[600],\n    color: theme.palette.common.white,\n    marginLeft: theme.spacing(1),\n    \"&:hover\": {\n      backgroundColor: theme.palette.grey[400],\n    },\n  },\n  btnStatus: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    marginLeft: theme.spacing(1),\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n}));\n\nconst BookingInfo: React.FC = () => {\n  const location = useLocation();\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n  const search = location.search.replace(\"?\", \"\");\n  const [, loader] = useLoader();\n  const [bookingData, setBookingData] = useState<Booking>();\n  const [patient, setPatient] = useState<Patient>();\n  const bookingId = get(parse(search), \"bookingId\", \"\") as string;\n\n  useEffect(() => {\n    if (bookingId) {\n      loader.push(\n        repoDoctor.getBookingInfo(bookingId).then((rs) => {\n          setBookingData(new Booking(rs));\n          if (rs && rs.userId) {\n            loader.push(\n              repoPatient.single(rs.patient || rs.userId).then((rs_p) => {\n                setPatient(rs_p);\n              }),\n            );\n          }\n        }),\n      );\n    }\n  }, []);\n\n  const mapStatusToColor = (status: BookingStatus | undefined) => {\n    console.log('bookingData', bookingData);\n    debugger\n    if (!status) return \"\";\n    switch (status) {\n      case BookingStatus.NEW:\n        return \"warning\";\n      case BookingStatus.COMPELETED:\n        return \"success\";\n      case BookingStatus.CONFIRMED:\n        return \"info\";\n      case BookingStatus.CANCELED:\n        return \"\";\n      default:\n        return \"\";\n    }\n  };\n\n  const handleChangeStatus = (status: BookingStatus | undefined) => {\n    if (!status) return \"\";\n    const payload = {\n      status: status,\n      notes: \"complete\",\n      // cancelReason: \"off\",\n    };\n    repoDoctor\n      .updateStatusBooking(bookingData!.id, payload)\n      .then((rs) => {\n        setBookingData(rs);\n        enqueueSnackbar(\n          <CloseButton name={\"success\"} message=\"Change Status Successfull!\" />,\n          {\n            key: \"success\",\n            variant: \"success\",\n          },\n        );\n      })\n      .catch((e) => {\n        enqueueSnackbar(<CloseButton name={\"error\"} message={e?.message} />, {\n          key: \"success\",\n          variant: \"error\",\n        });\n      });\n  };\n\n  const handleReExmination = () => {\n    history.push({\n      pathname: RouteList.schedules,\n      search: `?bookingId=${bookingData?.id}`,\n    });\n  };\n\n  return (\n    <>\n      {bookingData && patient && (\n        <Paper className={classes.root}>\n          <Box>\n            <Grid container>\n              <Grid item md={4}>\n                <Box alignItems=\"flex-start\" display=\"flex\">\n                  <Box mr={3}>\n                    <Avatar\n                      variant=\"square\"\n                      className={classes.square}\n                      src={patient?.avatar}\n                    >\n                      N\n                    </Avatar>\n                  </Box>\n                  <Box>\n                    <Box>Họ và Tên: {patient?.fullName}</Box>\n                    <Box>Emai: {patient?.email}</Box>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      Trạng thái:\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"flex-start\"\n                      >\n                        <Box\n                          {...defaultPropsBorder}\n                          borderRadius=\"50%\"\n                          borderColor={`${mapStatusToColor(\n                            bookingData?.status,\n                          )}.light`}\n                          bgcolor={`${mapStatusToColor(\n                            bookingData?.status,\n                          )}.main`}\n                        />\n                        <Box>{bookingData?.status}</Box>\n                      </Box>\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid\n                className={`${classes.ctaAction}`}\n                item\n                md={8}\n                justify=\"flex-end\"\n                alignItems={\"flex-start\"}\n              >\n                <Box>\n                  <Button\n                    className={classes.btnCancel}\n                    onClick={() => handleChangeStatus(BookingStatus.CANCELED)}\n                  >\n                    <Box ml={1}>\n                      <Box>Hủy</Box>\n                    </Box>\n                  </Button>\n                  {bookingData?.status === BookingStatus.NEW && (\n                    <Button\n                      className={classes.btnStatus}\n                      onClick={() =>\n                        handleChangeStatus(BookingStatus.CONFIRMED)\n                      }\n                    >\n                      <Box ml={1}>\n                        <Box>Xác nhận</Box>\n                      </Box>\n                    </Button>\n                  )}\n                  {bookingData?.status === BookingStatus.CONFIRMED && (\n                    <Button\n                      className={classes.btnStatus}\n                      onClick={() =>\n                        handleChangeStatus(BookingStatus.PROCESSING)\n                      }\n                    >\n                      <Box ml={1}>\n                        <Box>Đang diễn ra</Box>\n                      </Box>\n                    </Button>\n                  )}\n                  {bookingData?.status === BookingStatus.PROCESSING && (\n                    <Button\n                      className={classes.btnStatus}\n                      onClick={() =>\n                        handleChangeStatus(BookingStatus.COMPELETED)\n                      }\n                    >\n                      <Box ml={1}>\n                        <Box>Hoàn thành</Box>\n                      </Box>\n                    </Button>\n                  )}\n                  <Button\n                    className={classes.btnStatus}\n                    onClick={handleReExmination}\n                  >\n                    <Box ml={1}>\n                      <Box>Đăt lịch tái Khám</Box>\n                    </Box>\n                  </Button>\n                </Box>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Box mt={2} mb={1}>\n                Thông tin chi tiết\n              </Box>\n              <Box display=\"flex\">\n                <Box minWidth={200} mr={5}>\n                  <Box pt={1} pb={1}>\n                    Thời Gian diễn ra:\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    Bệnh nhân tư vấn\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    Ghi chú bệnh nhân\n                  </Box>\n                </Box>\n                <Box>\n                  <Box pt={1} pb={1}>\n                    {\" \"}\n                    14:30 - 22/10/2020\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    {\" \"}\n                    {bookingData.diseaseCodes.join(\", \")}\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    {\" \"}\n                    {bookingData.description}\n                  </Box>\n                </Box>\n              </Box>\n              <Box mt={2} mb={1}>\n                Thông tin thêm\n              </Box>\n              <Box display=\"flex\">\n                <Box minWidth={200} mr={5}>\n                  <Box pt={1} pb={1}>\n                    Dị ứng:\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    Chiều cao:\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    Cân nặng:{\" \"}\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    Nhắc nhở:{\" \"}\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    Lần tái khám:{\" \"}\n                  </Box>\n                </Box>\n                <Box>\n                  <Box pt={1} pb={1}>\n                    {\" \"}\n                    Hải sản\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    {\" \"}\n                    170 cm\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    {\" \"}\n                    57 kg\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    {\" \"}\n                    Không hút thuốc lá\n                  </Box>\n                  <Box pt={1} pb={1}>\n                    {\" \"}\n                    14:30 - 12/9/2020\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Paper>\n      )}\n    </>\n  );\n};\n\nexport default BookingInfo;\n"],"sourceRoot":""}