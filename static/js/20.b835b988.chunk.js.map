{"version":3,"sources":["components/FormChangePassword/index.tsx","pages/Profile/ChangePasswordModal.tsx","pages/Profile/index.tsx"],"names":["initialValue","currentPassword","newPassword","confirmNewPassword","onSubmit","values","a","setErrors","props","setSubmitting","handleSubmit","withFormik","mapPropsToValues","displayName","errors","touched","handleChange","handleClose","Box","DialogContent","FormControl","fullWidth","margin","TextField","type","error","label","name","variant","value","onChange","DialogActions","Button","onClick","color","ChangePasswordModal","open","Dialog","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","useStyles","makeStyles","theme","root","display","spacing","square","width","height","palette","getContrastText","deepOrange","backgroundColor","rounded","green","infoEmail","paddingRight","infoContent","padding","itemInfoField","borderBottomWidth","Profile","classes","history","useHistory","i18n","useI18n","useAuthentication","state","useState","toggole","setToggle","doctorInfo","setDoctorInfo","config","useEffect","account","repoDoctor","single","doctor","Container","Paper","className","pb","Grid","container","item","xs","sm","Avatar","src","avatar","Typography","component","fullName","email","status","ModelStatus","ACTIVE","system","common","active","inactive","pages","profileInfor","changePassword","push","hash","RouteList","profileEdit","changeInfor","birthDay","borderColor","borderBottom","nationality","gender","genderCode","nations","nationCode","jobTitle","diseases","diseasesConsultantCode","map","workSpace","workplace","hospital","academicRank","academicLevel","academicRankCode","description","paragraph","updatePassword"],"mappings":"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","file":"static/js/20.b835b988.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  FormControl,\n  TextField,\n  Box,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { ChangePasswordFormValues, ChangePasswordFormProps } from \"./index.d\";\nimport { FormikBag, FormikProps, withFormik } from \"formik\";\n\nconst initialValue = {\n  currentPassword: \"\",\n  newPassword: \"\",\n  confirmNewPassword: \"\",\n};\n\nconst InsideFormChangePass: React.FC<\n  FormikProps<ChangePasswordFormValues> & ChangePasswordFormProps\n> = ({ values, errors, touched, handleChange, handleSubmit, handleClose }) => {\n  return (\n    <Box>\n      <form onSubmit={handleSubmit}>\n        <DialogContent>\n          <FormControl fullWidth margin=\"dense\">\n            <TextField\n              type=\"password\"\n              error={!!(errors.currentPassword && touched.currentPassword)}\n              label=\"Current Password\"\n              name=\"currentPassword\"\n              variant=\"outlined\"\n              value={values.currentPassword}\n              onChange={handleChange}\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"dense\" variant=\"outlined\">\n            <TextField\n              type=\"password\"\n              error={!!(errors.newPassword && touched.newPassword)}\n              label=\"New Password\"\n              name=\"newPassword\"\n              variant=\"outlined\"\n              value={values.newPassword}\n              onChange={handleChange}\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"dense\" variant=\"outlined\">\n            <TextField\n              type=\"password\"\n              error={\n                !!(errors.confirmNewPassword && touched.confirmNewPassword)\n              }\n              label=\"Confirm New Password\"\n              name=\"confirmNewPassword\"\n              variant=\"outlined\"\n              value={values.confirmNewPassword}\n              onChange={handleChange}\n            />\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </form>\n    </Box>\n  );\n};\n\nconst onSubmit = async (\n  values: ChangePasswordFormValues,\n  {\n    setErrors,\n    props,\n    setSubmitting,\n  }: FormikBag<ChangePasswordFormProps, ChangePasswordFormValues>,\n) => {\n  setSubmitting(true);\n  await props.handleSubmit(values);\n};\n\nexport default withFormik<ChangePasswordFormProps, ChangePasswordFormValues>({\n  mapPropsToValues: () => ({\n    ...initialValue,\n  }),\n  handleSubmit: onSubmit,\n  displayName: \"ChangePassForm\",\n})(InsideFormChangePass);\n","import React from \"react\";\nimport { Dialog, DialogTitle } from \"@material-ui/core\";\nimport { FnType } from \"../../constants/types\";\nimport FormChangePass from \"components/FormChangePassword\";\nimport { ChangePasswordFormValues } from \"components/FormChangePassword/index.d\";\n\ninterface ChangePasswordModalProps {\n  open: boolean;\n  handleClose: FnType;\n  handleSubmit: (value: ChangePasswordFormValues) => void;\n}\nexport default function ChangePasswordModal({\n  open,\n  handleClose,\n  handleSubmit,\n}: ChangePasswordModalProps) {\n  return (\n    <div>\n      <Dialog\n        open={open}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          {\"Change password\"}\n        </DialogTitle>\n        <FormChangePass handleClose={handleClose} handleSubmit={handleSubmit} />\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {\n  Container,\n  Box,\n  Avatar,\n  Grid,\n  Typography,\n  Button,\n  Paper,\n} from \"@material-ui/core\";\nimport {deepOrange, green} from \"@material-ui/core/colors\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useHistory} from \"react-router\";\nimport {RouteList} from \"../../routeList\";\nimport {doctor as repoDoctor} from \"services/repos\";\nimport useAuthentication\n  from \"../../stores/authenticationsStore/authentication\";\nimport {Doctor, ModelStatus} from \"../../models\";\nimport ChangePasswordModal from \"./ChangePasswordModal\";\nimport {ChangePasswordFormValues} from \"components/FormChangePassword/index.d\";\nimport {useI18n} from \"../../stores/Locale/LocaleStore\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  square: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  rounded: {\n    color: \"#fff\",\n    backgroundColor: green[500],\n  },\n  infoEmail: {\n    paddingRight: theme.spacing(2),\n  },\n  infoContent: {\n    padding: theme.spacing(2),\n  },\n  itemInfoField: {\n    borderBottomWidth: 1,\n  },\n}));\n\nconst Profile: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const i18n = useI18n();\n  const [state] = useAuthentication();\n  const [toggole, setToggle] = useState(false);\n  const [doctorInfo, setDoctorInfo] = useState<Doctor>();\n  const {config} = i18n;\n\n  useEffect(() => {\n    (async function getPersistData() {\n      if (state.account.id) {\n        const doctor = await repoDoctor.single(state.account.id);\n        setDoctorInfo(doctor);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.account.id]);\n\n  const handleSubmit = (value: ChangePasswordFormValues) => {\n    repoDoctor.updatePassword({\n      currentPassword: value.currentPassword,\n      newPassword: value.newPassword,\n    });\n    setToggle(false);\n  };\n\n  const mapStatusToLanguage = (status?: ModelStatus) => {\n    if (status === ModelStatus.ACTIVE) {\n      return i18n.system.common.active;\n    }\n    return i18n.system.common.inactive\n  };\n\n  return (\n    <>\n      <Container>\n        <Box>\n          <Paper className={classes.infoContent}>\n            <Box pb={5}>\n              <Grid container spacing={2}>\n                <Grid item xs={1} sm={1}>\n                  <Avatar\n                    variant=\"square\"\n                    className={classes.square}\n                    src={doctorInfo?.avatar}\n                  >\n                    N\n                  </Avatar>\n                </Grid>\n                <Grid item xs={10} sm={10}>\n                  <Grid container>\n                    <Typography component=\"p\" variant=\"body1\">\n                      {doctorInfo?.fullName}\n                    </Typography>\n                    <Grid container>\n                      <Typography\n                        variant=\"caption\"\n                        component=\"span\"\n                        className={classes.infoEmail}\n                      >\n                        {doctorInfo?.email}\n                      </Typography>\n                      <Typography variant=\"caption\" component=\"span\">\n                        {mapStatusToLanguage(doctorInfo?.status)}\n                      </Typography>\n                    </Grid>\n                    <Grid container>\n                      <Grid item>\n                        <Button color=\"primary\" onClick={() => setToggle(true)}>\n                          {i18n.pages.profileInfor.changePassword}\n                        </Button>\n                      </Grid>\n                      <Grid item>\n                        <Button\n                          color=\"primary\"\n                          onClick={() =>\n                            history.push({hash: RouteList.profileEdit})\n                          }\n                        >\n                          {i18n.pages.profileInfor.changeInfor}\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n\n            <Grid container spacing={2}>\n              <Grid item xs={6} sm={6}>\n                <div>\n                  <Typography color=\"textSecondary\" component=\"span\">\n                    {i18n.system.common.birthDay}:{\" \"}\n                  </Typography>\n                  <Typography component=\"span\">22/9/1984</Typography>\n                  <Box borderColor=\"grey.500\" borderBottom={1}/>\n                </div>\n                <div>\n                  <Typography color=\"textSecondary\" component=\"span\">\n                    {i18n.system.common.nationality}:{\" \"}\n                  </Typography>\n                  <Typography component=\"span\">Viet Nam</Typography>\n                  <Box borderColor=\"grey.500\" borderBottom={1}/>\n                </div>\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <div>\n                  <Typography color=\"textSecondary\" component=\"span\">\n                    {i18n.system.common.gender}:{\" \"}\n                  </Typography>\n                  <Typography component=\"span\">\n                    {config.gender[doctorInfo?.genderCode || \"m\"]}\n                  </Typography>\n                  <Box borderColor=\"grey.500\" borderBottom={1}/>\n                </div>\n                <div>\n                  <Typography color=\"textSecondary\" component=\"span\">\n                    {i18n.system.common.nationality}:{\" \"}\n                  </Typography>\n                  <Typography component=\"span\">\n                    {config.nations[doctorInfo?.nationCode || \"ki\"]}\n                  </Typography>\n                  <Box borderColor=\"grey.500\" borderBottom={1}/>\n                </div>\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <div>\n                  <Typography color=\"textSecondary\" component=\"span\">\n                    {i18n.system.common.jobTitle}:{\" \"}\n                  </Typography>\n                  <Typography component=\"span\">\n                    {config.nations[doctorInfo?.jobTitle || \"\"]}\n                  </Typography>\n                  <Box borderColor=\"grey.500\" borderBottom={1}/>\n                </div>\n                <div>\n                  <Typography color=\"textSecondary\" component=\"span\">\n                    {i18n.system.common.diseases}:{\" \"}\n                  </Typography>\n                  {doctorInfo?.diseasesConsultantCode &&\n                  doctorInfo?.diseasesConsultantCode.map((diseases) => {\n                    return (\n                      <Typography component=\"span\">\n                        {config.diseases[diseases || \"\"]}\n                      </Typography>\n                    );\n                  })}\n                  <Box borderColor=\"grey.500\" borderBottom={1}/>\n                </div>\n              </Grid>\n              <Grid item xs={6} sm={6}>\n                <div>\n                  <Typography color=\"textSecondary\" component=\"span\">\n                    {i18n.system.common.workSpace}:{\" \"}\n                  </Typography>\n                  {doctorInfo?.workplace &&\n                  doctorInfo?.workplace.map((workplace) => {\n                    return (\n                      <Typography component=\"span\">\n                        {config.hospital[workplace || \"\"]}\n                      </Typography>\n                    );\n                  })}\n                  <Box borderColor=\"grey.500\" borderBottom={1}/>\n                </div>\n                <div>\n                  <Typography color=\"textSecondary\" component=\"span\">\n                    {i18n.system.common.academicRank}:{\" \"}\n                  </Typography>\n                  <Typography component=\"span\">\n                    {config.academicLevel[doctorInfo?.academicRankCode || \"\"]}\n                  </Typography>\n                  <Box borderColor=\"grey.500\" borderBottom={1}/>\n                </div>\n              </Grid>\n              <Grid item xs={12} sm={12}>\n                <div>\n                  <Typography color=\"textSecondary\" variant=\"body1\">\n                    {i18n.system.common.description}:\n                  </Typography>\n                  <Typography variant=\"body1\" paragraph>\n                    {doctorInfo?.description}\n                  </Typography>\n                </div>\n              </Grid>\n            </Grid>\n            <ChangePasswordModal\n              open={toggole}\n              handleClose={() => setToggle(false)}\n              handleSubmit={handleSubmit}\n            />\n          </Paper>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}