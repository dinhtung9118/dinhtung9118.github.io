{"version":3,"sources":["services/repos/Account.ts","constants/enums.ts","stores/loader/index.ts","components/BlockSplit/Store.ts","utils/Date.ts","utils/Strings.ts","utils/Validations.ts","utils/Promise.ts","utils/I18n.ts","utils/Locale.ts","utils/Array.ts","utils/Math.ts","utils/Object.ts","services/repos/Doctor.ts","services/repos/Clinic.ts","services/repos/Specialties.ts","services/repos/I18n.ts","models/patient.ts","services/repos/Patient.ts","routeList.ts","models/specialty.ts","models/specialtyType.ts","components/FormLogin/index.tsx","pages/Login/index.type.ts","pages/Login/index.tsx","components/LinearIndeterminate/index.tsx","components/SideBar/index.style.ts","components/SideBar/SideBarMenu.ts","stores/UIstore/UIStore.ts","components/Header/index.tsx","components/SideBar/index.tsx","stores/Connection/Connection.ts","pages/Layout/index.tsx","components/Spinner/index.tsx","components/HashDrawer/index.tsx","pages/HashRoutes.ts","pages/PrivateRoute.tsx","pages/Routes.tsx","middlewares/logger.ts","middlewares/persistent.ts","themes/Providers.tsx","themes/default/index.ts","themes/default/main.ts","stores/UIstore/withUIStore.tsx","stores/Locale/withLocalePersist.tsx","App.tsx","stores/authenticationsStore/withAuthPersist.tsx","serviceWorker.ts","index.tsx","models/base.ts","stores/authenticationsStore/authentication.ts","models/account.ts","utils/index.ts","stores/Locale/LocaleStore.ts","storages/index.ts","models/workingTime.ts","utils/Notifier/ChangeNotifier.ts","models/booking.ts","config/development.ts","config/index.ts","services/repos/index.ts","utils/Notifier/ValueNotifier.ts","services/clients/Http.ts","components/Notistack/index.tsx","services/repos/Auth/index.tsx","utils/Completer.ts","models/clinic.ts","models/doctor.ts"],"names":["RepoAccount","sub","updateStatus","id","status","a","http","patch","req","get","this","params","buildRequestParams","data","payload","post","pickPayload","result","ids","Promise","delay","BookingStatus","BookingTypes","Store","createStore","name","initialState","count","total","completer","Completer","actions","push","promise","lazy","getState","setState","all","catch","console","warn","completed","resolve","requestAnimationFrame","reset","useActions","createHook","selector","useLoader","useLoaderActions","createContainer","sum","nums","reduce","b","value","BLOCKSPLITTIME_STORE","isEdit","begin","length","snaps","selected","Array","blocks","editToggle","forEach","block","enable","blockAdd","from","last","to","blockUpdate","index","first","i","prepareBlocks","blockRemove","splice","blockToggle","current","max","filter","snap","select","Container","onInit","end","useBlockSplit","configTimeDate","getDateTimeNumber","date","getHours","getMinutes","getSeconds","Math","floor","getTime","convertToUTC7","moment","utcOffset","window","atob","btoa","Object","defineProperties","String","prototype","decoding","encoding","emailFormat","isUnicodeFormat","validations","requireString","Boolean","trim","requireNumber","parseFloat","email","toLocaleLowerCase","test","pattern","reg","createValidation","list","values","errors","entries","validates","key","code","validate","mSeconds","next","setTimeout","debounce","time","gCall","timeout","call","clearTimeout","I18n","401","404","500","offline","PARTNER_NOT_FOUND","config","nations","nationality","academicLevel","hospital","gender","diseases","jobTitle","area","system","yes","no","ok","cancel","disagree","agree","active","inactive","acceptance","create","update","submit","notices","online","common","birthDay","nation","workSpace","academicRank","description","save","wellcome","component","menubar","dashboard","languages","patient","doctors","account","manager","partner","root","clinics","accounts","specialties","formLogin","username","password","signIn","inputs","workplace","label","required","placeholder","accountForm","firstName","lastName","phoneNumber","formSpecialist","specialtyType","formSpeciateType","vi","en","partnerForm","phoneNumberExt1","phoneNumberExt2","address","avatar","tncAcceptance","doctorForm","education","note","clinicForm","businessNo","pages","login","forgot","consultationSchedule","title","error404","goToHome","profileInfor","changePassword","changeInfor","editInfor","editAvatar","infoDoctor","assign","Locale","props","language","country","split","parse","navigator","remove","item","indexOf","seperate","arr","Function","range","undefined","random","Number","pad","width","z","num","toString","join","isEmpty","obj","hasOwnProperty","map","callBack","out","k","doctor","format","subtract","query","Doctor","single","log","updatePassword","updateWorkingTime","model","WorkingTime","ModelStatus","ACTIVE","INACTIVE","body","getWorkingTime","batchCreate","getConsultationWorkingTime","getBookings","Booking","getBookingInfo","reExaminationBooking","updateStatusBooking","payloadStatusBooking","partner_id","specialty_ids","file","fileName","contentType","fullFileName","put","signedUrl","headers","type","search","keyword","limit","offset","res","queryAll","Clinic","SpecialtyType","idClinic","dataBody","formData","Specialty","idSpecialty","merge","widgets","locales","mapCode","fetchConfig","link","clientConfig","then","response","error","mapDataI18n","out1","i18n","locale","find","Patient","dateOfBirth","Date","nationCode","nationalityCode","job","Account","rs","RouteList","auth","register","profile","schedules","profileEdit","examinationSchedule","bookingInfo","consultationCreate","consultationWorkingTime","ReExamintionBooking","partnerId","createdAt","updatedAt","BaseModel","initialValue","onSubmit","setErrors","setSubmitting","withFormik","mapPropsToValues","handleSubmit","displayName","touched","handleChange","Box","FormControl","fullWidth","margin","TextField","variant","onChange","Button","color","useStyles","makeStyles","theme","justifyContent","minHeight","display","alignItems","grid","flexGrow","paper","spacing","padding","paddingTop","textAlign","alignContent","flexDirection","logo","height","backgroundColor","palette","grey","A100","marginBottom","form","marginTop","classes","useAuthentication","state","history","useHistory","useEffect","AuthStatus","LOGGED","className","Grid","container","justify","xs","Paper","Typography","FormLogin","Link","RouteLink","LinearIndeterminate","LinearProgress","hide","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","toolbar","mixins","drawer","flexShrink","whiteSpace","background","text","disabled","drawerOpen","drawerClose","overflowX","breakpoints","up","content","contentShift","drawerHeader","textDecoration","white","IconMenu","mockDataSidebar","menus","featureName","icon","subCreateMenus","subMenus","sideBar","collapsed","toggleSideBar","newSideBarState","useUI","createSubscriber","storeKey","UIContainer","grow","zIndex","boxShadow","sectionDesktop","sectionMobile","Header","action","useState","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","onClick","logout","AppBar","Toolbar","event","currentTarget","SideBar","clsx","Drawer","noWrap","List","menu","ListItem","button","ListItemIcon","ListItemText","primary","connectNotifier","_onlineListener","_value","onLine","notify","addEventListener","removeEventListener","ChangeNotifier","Layout","children","useSnackbar","enqueueSnackbar","closeSnackbar","keyOf","listen","isOnline","autoHideDuration","message","errorNotifier","useConnectSnackBar","useI18n","Spinner","CircularProgress","DrahDrawer","HashDrawerSwitch","routes","hash","location","slice","matchRoute","route","matchPath","ref","useRef","useMemo","render","match","createElement","anchor","position","goBack","ProfileEdit","ConsulteantionCreate","ReExaminationBooking","HashRoutes","path","renderRoute","Component","fallback","PrivateRoute","rest","isHash","pathname","DashBoard","Profile","SchedulesPage","ConsultationSchedule","Examinationchedule","BookingInfo","SchedulesConsultationPage","Routes","Login","exact","isDevEnv","defaults","middlewares","add","storeState","fn","groupCollapsed","JSON","stringify","groupEnd","WHITE_LIST","AUTHENTICATION_STORE","I18N_STORE","store","includes","databases","setItem","err","options","black","default","light","main","dark","contrastText","warning","secondary","success","info","hint","typography","fontFamily","overrides","MuiListItemIcon","minWidth","MuiCssBaseline","RootThemeProvider","createMuiTheme","defaultTheme","withUIPersist","sizeDown","initialStoreState","storePersisted","setStorePersisted","loader","useLocale","localeActions","load","useLayoutEffect","getItem","initiated","isGlobal","withI18nPersist","withAuthPersist","hostname","ReactDOM","StrictMode","ReactRouterRoute","Route","document","getElementById","serviceWorker","ready","registration","unregister","_id","mapValues","getOwnPropertyNames","keys","parseInt","substring","bool","role","AccountRole","DOCTOR","AccountStatus","INITIAL","token","authRepo","setHttpAuth","removeItem","AuthenticationContainer","PATIENT","groupId","externalId","ObjectIDTime","statusToBool","supports","repoI18n","initial","I18NContainer","getI18n","localForage","driver","INDEXEDDB","version","size","storeName","createInstance","doctorId","remainSeats","seats","workingTimes","workingTime","dayjs","working","startDate","clone","toDate","endDate","minus","hours","min","$listeners","$closed","$debugClose","listener","Error","notes","NEW","specialty","start","hasMedicalInsurance","userId","diseaseCodes","additionalData","serialId","isObject","API","ROOT_ENDPOINT","process","DOCTOR_SERVICE","AUTH_SERVICE","PARTNER_SERVICE","SPECIALTYPE_SERVICE","dev","env","ValueNotifier","$value","axios","baseURL","valueNotifier","valueChanged","close","offlineHandle","createError","reject","interceptors","use","sort","sortField","sortType","desc","Authorization","CloseButton","messages","maxWidth","fontSize","msg","style","right","top","ApiConfig","access_token","userInfo","rejected","checkBadStack","stackTrace","emailVerified","genderCode","diseasesConsultantCode","academicRankCode"],"mappings":"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","file":"static/js/main.cae24234.chunk.js","sourcesContent":["import { ModelStatus } from \"models/base\";\nimport { Account } from \"models\";\n\nimport { IReqPaging, IResList, IResponse } from \"./interface\";\n\nimport { http, buildRequestParams } from \"../clients/Http\";\n\nexport abstract class RepoAccount<T extends Account> {\n  constructor(protected sub: string) {}\n\n  async query(req: IReqPaging): Promise<IResList<T>> {\n    const { data } = await http.get(this.sub, {\n      params: buildRequestParams(req),\n    });\n    return data;\n  }\n\n  protected pickPayload(payload: any) {\n    return payload;\n  }\n\n  async create(payload: Partial<T> | any) {\n    const { data } = await http.post<IResponse<T>>(\n      this.sub,\n      this.pickPayload(payload),\n    );\n    return data.data;\n  }\n\n  async update(id: string, payload: Partial<T> | any) {\n    const { data: result } = await http.patch<IResponse<T>>(\n      `${this.sub}/me`,\n      this.pickPayload(payload),\n    );\n    return result.data;\n  }\n\n  async single(id: string) {\n    const { data } = await http.get<IResponse<T>>(`${this.sub}/${id}`);\n    return data.data;\n  }\n\n  updateStatus = async (id: string, status: ModelStatus) => {\n    await http.patch(`/users/${id}/change-status`, { status });\n    return true;\n  };\n\n  async delete(ids: string[]) {\n    await Promise.delay(200);\n    return true;\n  }\n}\n","export enum BookingStatus {\n  NEW = \"NEW\",\n  CONFIRMED = \"CONFIRMED\",\n  OUT_OF_DATE = \"OUT_OF_DATE\",\n  COMPELETED = \"COMPLETED\",\n  CANCELED = \"CANCELED\",\n  PROCESSING = \"PROCESSING\",\n}\n\nexport enum BookingTypes {\n  EXAMINATION = \"EXAMINATION\",\n  RE_EXAMINATION = \"RE_EXAMINATION\",\n  CONSULTATION = \"CONSULTATION\",\n}\n","import { createStore, createHook, createContainer } from \"react-sweet-state\";\n\nimport { Completer } from \"utils\";\n\nconst Store = createStore({\n  name: \"Loader\",\n  initialState: {\n    count: 0,\n    total: 0,\n    completer: new Completer(),\n  },\n  actions: {\n    push: (promise: Promise<any>, lazy = 250) => async ({\n      getState,\n      setState,\n    }) => {\n      (() => {\n        const { total } = getState();\n        if (total === 0) {\n          setState({ total: total + 1, completer: new Completer() });\n        } else {\n          setState({ total: total + 1 });\n        }\n      })();\n\n      const { completer } = getState();\n      await Promise.all([Promise.delay(lazy), promise.catch(console.warn)]);\n\n      (() => {\n        const { count, total } = getState();\n        if (completer.completed) return;\n        if (count + 1 === total) {\n          completer.resolve();\n          requestAnimationFrame(() => {\n            setState({ count: 0, total: 0 });\n          });\n        } else {\n          setState({ count: count + 1 });\n        }\n      })();\n\n      await completer.promise;\n      return promise;\n    },\n\n    reset: () => ({ getState, setState }) => {\n      const { completer } = getState();\n      if (!completer.completed) {\n        completer.resolve();\n        setState({ count: 0, total: 0 });\n      }\n    },\n  },\n});\n\nconst useActions = createHook(Store, { selector: () => 0 });\n\nexport const useLoader = createHook(Store);\n\nexport const useLoaderActions = () => useActions()[1];\n\nexport const useLoaderStatus = createHook(Store, {\n  selector: ({ total, count }) => total !== count,\n});\n\nexport const LoaderContainer = createContainer(Store);\n","import { createStore, createContainer, createHook } from \"react-sweet-state\";\n\nconst sum = (nums: IBlock[]) => nums.reduce((a, b) => a + b.value, 0);\n\nexport type IBlock = {\n  from: number;\n  to: number;\n  value: number;\n  enable: boolean;\n  selected: boolean;\n};\n\nconst prepareBlocks = (blocks: IBlock[], first: number) => {\n  for (let i = 0; i < blocks.length - 1; i++) {\n    const block = blocks[i];\n    const from = blocks[i - 1]?.to || first;\n    block.from = from;\n    block.to = from + block.value;\n  }\n};\n\nexport const BLOCKSPLITTIME_STORE = \"BlockSplit\";\n\nconst Store = createStore({\n  initialState: {\n    isEdit: false,\n    begin: 480,\n    length: 540,\n    snaps: [15, 30, 45, 60, 75, 90, 105, 120],\n    selected: Array<IBlock>(),\n    blocks: Array<IBlock>(),\n  },\n  actions: {\n    editToggle: () => ({ getState, setState }) => {\n      const { isEdit, blocks } = getState();\n      if (isEdit) {\n        blocks.forEach((block) => {\n          block.selected = block.enable ? block.selected : false;\n        });\n      }\n      setState({ isEdit: !isEdit });\n    },\n    blockAdd: (value: number) => ({ getState, setState }) => {\n      const { blocks, begin } = getState();\n      const from = blocks.last?.to || begin;\n      blocks.push({\n        value,\n        enable: true,\n        selected: false,\n        from,\n        to: from + value,\n      });\n      setState({ blocks: [...blocks] });\n    },\n    blockUpdate: (index: number, value: number) => ({ getState, setState }) => {\n      const { blocks, begin } = getState();\n      blocks[index].value = value;\n      prepareBlocks(blocks, begin);\n      setState({ blocks: [...blocks] });\n    },\n    blockRemove: (index: number) => ({ getState, setState }) => {\n      const { blocks } = getState();\n      blocks.splice(index, 1);\n      setState({ blocks: [...blocks] });\n    },\n    blockToggle: (index: number) => ({ getState, setState }) => {\n      const { blocks } = getState();\n      blocks[index].enable = !blocks[index].enable;\n      setState({ blocks: [...blocks] });\n    },\n\n    snaps: (current = 0) => ({ getState }) => {\n      const { snaps, length, blocks } = getState();\n      const max = length - sum(blocks) + current;\n      return snaps.filter((snap) => snap < max);\n    },\n\n    select: (index: number) => ({ getState, setState }) => {\n      const { blocks } = getState();\n      blocks[index].selected = !blocks[index].selected;\n      setState({\n        blocks: [...blocks],\n        selected: blocks.filter((b) => b.selected),\n      });\n    },\n  },\n  name: BLOCKSPLITTIME_STORE,\n});\n\nexport const Container = createContainer(Store, {\n  onInit: () => (\n    { setState },\n    { begin, end }: { begin: number; end: number },\n  ) => {\n    setState({ begin, length: end - begin });\n  },\n});\n\nexport const useBlockSplit = createHook(Store);\n","import moment from \"moment\";\n\nexport const configTimeDate = 1000; // 1000 ms\nexport const getDateTimeNumber = (date: Date) => {\n  const h = date.getHours() * 60 * 60;\n  const m = date.getMinutes() * 60;\n  const s = date.getSeconds();\n  const total = (h + m + s) * configTimeDate;\n  return (\n    Math.floor((date.getTime() - total || 0) / configTimeDate) * configTimeDate\n  );\n};\n\nexport const convertToUTC7 = (date: Date) => {\n  const combineDate = moment(date).utcOffset(\"+07:00\");\n  return combineDate;\n};\n","let { atob, btoa } = window;\n\ndeclare global {\n  interface String {\n    decoding: string;\n    encoding: string;\n  }\n}\n\n// eslint-disable-next-line no-extend-native\nObject.defineProperties(String.prototype, {\n  decoding: {\n    value() {\n      return atob(this);\n    },\n  },\n  encoding: {\n    value() {\n      return btoa(this);\n    },\n  },\n});\n\nexport {};\n","import { IValidList, IValidError } from \"./Validations.d\";\n\nexport * from \"./Validations.d\";\n\n// eslint-disable-next-line no-useless-escape\nconst emailFormat = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// eslint-disable-next-line no-control-regex\nconst isUnicodeFormat = /[^\\u0000-\\u00ff]/;\n\nexport const validations = {\n  requireString(value: string) {\n    if (typeof value !== \"string\") return false;\n    return Boolean(value.trim());\n  },\n  requireNumber: (value: any) => Boolean(parseFloat(value)),\n  email(value: any) {\n    value = String(value).toLocaleLowerCase();\n    return !isUnicodeFormat.test(value) && emailFormat.test(value);\n  },\n  pattern(reg: RegExp) {\n    return (value: any) => typeof value === \"string\" && reg.test(value);\n  },\n};\n\nexport function createValidation<T extends Object>(list: IValidList<T>) {\n  type Key = keyof T;\n\n  return (values: T) => {\n    const errors = {} as Record<Key, IValidError>;\n\n    Object.entries(list).forEach(([name, validates]) => {\n      const key = name as Key;\n      Object.entries<(value: any) => boolean>(validates as {}).forEach(\n        ([code, validate]) => {\n          if (!errors[key] && validate(values[key]) !== true) {\n            errors[key] = code as IValidError;\n          }\n        },\n      );\n    });\n\n    return errors;\n  };\n}\n","import { Completer } from \"./Completer\";\n\ndeclare global {\n  interface PromiseConstructor {\n    delay<T>(mSeconds?: number, result?: T): Promise<T>;\n\n    debounce<T = unknown>(\n      time: number,\n      call?: () => T,\n    ): (call?: () => T) => void;\n  }\n}\n\nPromise.delay = function delay<T>(mSeconds?: number, value?: T) {\n  return new Promise<T>((next) => {\n    setTimeout(() => next(value), mSeconds);\n  });\n};\n\nPromise.debounce = function debounce<T = unknown>(\n  time: number,\n  gCall?: () => T,\n) {\n  let completer: Completer<T>;\n  let timeout: NodeJS.Timeout;\n\n  return (call?: () => T) => {\n    if (completer?.completed !== false) {\n      completer = new Completer<T>();\n    }\n\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      completer.resolve((call || gCall)?.());\n    }, time);\n  };\n};\n\nexport {};\n","import { IValidErrorMsgs } from \"./Validations.d\";\n\ntype IMapString = Record<string, string>;\n\nexport type I18nFormField = {\n  label: string;\n  placeholder?: string;\n  errors?: IValidErrorMsgs;\n};\n\nfunction asType<T>(value: T) {\n  return value;\n}\n\nfunction asFormFields<Fs extends Record<string, I18nFormField>>(map: Fs) {\n  return map as Record<keyof Fs, I18nFormField>;\n}\n\nexport class I18n {\n  constructor(data?: I18n) {\n    Object.assign(this, data);\n  }\n\n  errors = asType<Record<string, string>>({\n    401: \"Unauthorized\",\n    404: \"Not found\",\n    500: \"Internal server error\",\n    offline: \"Please check your connection.\",\n    PARTNER_NOT_FOUND: \"Partner not found\",\n  });\n\n  config = {\n    nations: asType<IMapString>({}),\n    nationality: asType<IMapString>({}),\n    academicLevel: asType<IMapString>({}),\n    hospital: asType<IMapString>({}),\n    gender: asType<IMapString>({}),\n    diseases: asType<IMapString>({}),\n    jobTitle: asType<IMapString>({}),\n    area: asType<IMapString>({}),\n  };\n\n  system = {\n    yes: \"Yes\",\n    no: \"No\",\n    ok: \"Ok\",\n    cancel: \"Cancel\",\n    disagree: \"Disagree\",\n    agree: \"Agree\",\n    active: \"Active\",\n    inactive: \"Inactive\",\n    gender: \"Gender\",\n    status: \"Status\",\n    acceptance: \"Acceptance\",\n    create: \"Create\",\n    update: \"Update\",\n    submit: \"Submit\",\n    notices: {\n      offline: \"You lose connection.\",\n      online: \"You are back online.\",\n    },\n    common:{\n      birthDay: \"Ngày sinh\",\n      gender: \"Giới tính\",\n      nationality: \"Quốc gia\",\n      nation: \"Dân tộc\",\n      jobTitle: \"Chức danh\",\n      workSpace: \"Nơi làm việc\",\n      academicRank: \"Học Vấn\",\n      description: \"Mô tả\",\n      diseases: \"Bệnh Chuyên khoa\",\n      active: \"Đã xác nhận\",\n      inactive: \"Chưa xác nhận\",\n      save: \"Lưu\",\n      wellcome: \"Xin Chào\"\n    },\n  };\n\n  component = {\n    menubar: {\n      dashboard: \"Dashboard\",\n      languages: \"Languages\",\n      patient: \"Patient\",\n      doctors: \"Doctors\",\n      account: {\n        manager: \"Account manager\",\n        create: \"New account\",\n        partner: \"Partner\",\n        doctors: \"Doctors\",\n        patient: \"Patient\",\n      },\n      partner: {\n        root: \"Partner\",\n        clinics: \"Clinics\",\n        accounts: \"Admin account\",\n        specialties: \"SpecialtyType\",\n      },\n      clinics: {\n        manager: \"Clinic manager\",\n      },\n      specialties: {\n        manager: \"Medical Specialties\",\n      },\n    },\n\n    formLogin: {\n      username: \"User name\",\n      password: \"Password\",\n      signIn: \"Login\",\n    },\n    inputs: asFormFields({\n      workplace: {\n        label: \"Nơi làm việc\",\n        errors: {\n          required: \"Nơi làm việc bắt buộc\",\n        },\n      },\n      diseases: {\n        label: \"Bệnh Chuyên khoa\",\n        errors: {\n          required: \"Bệnh Chuyên khoa bắt buộc\",\n        },\n      },\n      jobTitle: {\n        label: \"Chức danh\",\n        errors: {\n          required: \"Chức danh là bắt buộc\",\n        },\n      },\n      gender: {\n        label: \"Giới tính\",\n        errors: {\n          required: \"Giới tính bắt buộc\",\n        },\n      },\n      academicRank: {\n        label: \"Học Vấn\",\n        placeholder: \"Nhập học vấn\",\n        errors: {\n          required: \"Học Vấn bắt buộc\",\n        },\n      },\n      nation: {\n        label: \"Dân tộc\",\n        placeholder: \"Nhập dân tộc\",\n        errors: {\n          required: \"dân tộc băt buộc\",\n        },\n      },\n      nationality: {\n        label: \"Quốc gia\",\n        placeholder: \"Nhập quốc gia\",\n        errors: {\n          required: \"Quốc gia bắt buộc\",\n        },\n      },\n    }),\n\n    accountForm: {\n      firstName: {\n        label: \"Họ\",\n        placeholder: \"Nhập Họ ...\",\n        errors: {\n          required: \"Họ bắt buộc\",\n        },\n      },\n      lastName: {\n        label: \"Tên\",\n        placeholder: \"nhập tên\",\n        errors: {\n          required: \"Tên bắt buộc\",\n        },\n      },\n      phoneNumber: {\n        label: \"Số điện thoại\",\n        placeholder: \"Nhập số điện thoại\",\n        errors: {\n          required: \"Số điện thoại bắt buộc\",\n        },\n      },\n      email: {\n        label: \"Email\",\n        placeholder: \"Nhập email ...\",\n        errors: {\n          required: \"Email bắt buộc.\",\n          pattern: \"Email không hợp lệ.\",\n        },\n      },\n      password: {\n        label: \"Mật khẩu\",\n        placeholder: \"Nhập Mật khẩu\",\n        errors: {\n          required: \"Mật khẩu bắt buộc\",\n        },\n      },\n    },\n\n    formSpecialist: asFormFields({\n      specialtyType: {\n        label: \"Specialist code\",\n        placeholder: \"Enter specialist code \",\n        errors: {\n          required: \"Specialist code can not empty.\",\n        },\n      },\n      name: {\n        label: \"Specialist name\",\n        placeholder: \"Enter specialist name\",\n        errors: {\n          required: \"Name code can not empty.\",\n        },\n      },\n      description: {\n        label: \"Specialist description\",\n        placeholder: \"Enter specialist name\",\n        errors: {\n          required: \"Specialist description can not empty.\",\n        },\n      },\n    }),\n\n    formSpeciateType: asFormFields({\n      code: {\n        label: \"Code\",\n        placeholder: \"Code specialty type\",\n        errors: {\n          required: \"Name code can not empty.\",\n        },\n      },\n      vi: {\n        label: \"Vi name \",\n        placeholder: \"Vi name specialty type name\",\n        errors: {\n          required: \"Vi name can not empty.\",\n        },\n      },\n      en: {\n        label: \"En name\",\n        placeholder: \"En name specialty type name\",\n        errors: {\n          required: \"En name specialty type can not empty.\",\n        },\n      },\n    }),\n\n    partnerForm: asFormFields({\n      partner: {\n        label: \"Partner Code\",\n        placeholder: \"Partner Code\",\n        errors: {\n          required: \"Partner Code can not empty.\",\n        },\n      },\n      phoneNumberExt1: {\n        label: \"Phone number Ext1\",\n        placeholder: \"Phone number Ext1\",\n      },\n      phoneNumberExt2: {\n        label: \"Phone number Ext2\",\n        placeholder: \"Phone number Ext2\",\n      },\n      address: {\n        label: \"Address\",\n        placeholder: \"Address\",\n      },\n      avatar: {\n        label: \"Avatar\",\n        placeholder: \"Avatar\",\n      },\n      tncAcceptance: {\n        label: \"Tnc Acceptance\",\n        placeholder: \"Tnc Acceptance\",\n      },\n    }),\n\n    doctorForm: asFormFields({\n      education: {\n        label: \"Education\",\n        placeholder: \"Education\",\n      },\n      note: {\n        label: \"Mô tả\",\n        placeholder: \"Nhập mô tả ...\",\n      },\n      partner: {\n        label: \"Phòng khám/Bệnh viện\",\n        placeholder: \"Nhập phong khám/Bệnh viện\",\n        errors: {\n          required: \"Phòng khám/Bệnh viên bắt buộc\",\n        },\n      },\n      specialties: {\n        label: \"Chuyên khoa\",\n        placeholder: \"Nhập Chuyên khoa\",\n        errors: {\n          required: \"Chuyên khoa bắt buộc\",\n        },\n      },\n    }),\n\n    clinicForm: asFormFields({\n      name: {\n        label: \"Clinic partner name\",\n        placeholder: \"Enter name\",\n        errors: {\n          required: \"Name can not empty.\",\n        },\n      },\n      phoneNumber: {\n        label: \"Phone Number of clinic partner\",\n        placeholder: \"Enter Phone Number\",\n        errors: {\n          required: \"Phone can not empty.\",\n        },\n      },\n      code: {\n        label: \"Clinic partner code\",\n        placeholder: \"Enter code\",\n        errors: {\n          required: \"Code can not empty.\",\n        },\n      },\n      address: {\n        label: \"Address of clinic partner\",\n        placeholder: \"Enter address\",\n        errors: {\n          required: \"Address can not empty.\",\n        },\n      },\n      email: {\n        label: \"Email clinic partner\",\n        placeholder: \"Enter email\",\n        errors: {\n          required: \"Email can not empty.\",\n          pattern: \"Email is invalid.\",\n        },\n      },\n      phoneNumberExt1: {\n        label: \"Phone Number Ext 1\",\n        placeholder: \"Enter Phone Number\",\n        errors: {\n          pattern: \"Phone Number Ext 1 is invalid.\",\n        },\n      },\n      phoneNumberExt2: {\n        label: \"Phone Number Ext 2\",\n        placeholder: \"Phone Number Ext 2 is invalid.\",\n        errors: {\n          pattern: \"Phone Number Ext 2 is invalid.\",\n        },\n      },\n      description: {\n        label: \"Description clinic partner\",\n        placeholder: \"Enter description\",\n      },\n      businessNo: {\n        label: \"BusinessNo clinic partner\",\n        placeholder: \"Enter businessNo\",\n        errors: {\n          required: \"BusinessNo clinic partner can not empty.\",\n        },\n      },\n    }),\n  };\n\n  pages = {\n    login: {\n      forgot: \"Forgot password\",\n    },\n    consultationSchedule: {\n      title: \"Consultantion Schedule Partiens\",\n    },\n    error404: {\n      goToHome: \"Go to home\",\n    },\n    profileInfor: {\n      changePassword: \"Đổi mật khẩu\",\n      changeInfor: \"Chỉnh sửa thông tin\",\n      editInfor: \"Chỉnh sửa thông tin\",\n      editAvatar: \"Cập nhật ảnh đại diện\",\n      infoDoctor: \"Thông tin bác sỹ\",\n      firstName: \"Họ\",\n      lastName: \"Tên\",\n\n    }\n  };\n}\n","export class Locale {\n  constructor(props: Omit<Locale, \"code\">) {\n    Object.assign(this, props);\n  }\n\n  title!: string;\n  language!: string;\n  country!: string;\n\n  get code() {\n    return `${this.language}-${this.country}`;\n  }\n\n  static parse(code: string, title: string = \"\") {\n    const split = code.split(\"-\");\n    return new Locale({\n      title,\n      language: split[0],\n      country: split[1],\n    });\n  }\n\n  static system() {\n    return Locale.parse(navigator.language, \"System\");\n  }\n}\n","declare global {\n  interface Array<T> {\n    remove(item: T): number;\n    seperate<S>(seperate: S | ((index: number) => S)): (T | S)[];\n    readonly first: T;\n    readonly last: T;\n  }\n}\n/* eslint-disable */\nObject.defineProperties(Array.prototype, {\n  remove: {\n    value(item: unknown) {\n      const index = this.indexOf(item);\n      this.splice(index, 1);\n      return index;\n    },\n  },\n  seperate: {\n    value(seperate: unknown) {\n      const arr: unknown[] = [];\n      const call = seperate instanceof Function ? seperate : () => seperate;\n      for (let i = 0; i < this.length - 1; i++) {\n        arr.push(this[i]);\n        arr.push(call(i));\n      }\n\n      this.length && arr.push(this.last);\n\n      return arr;\n    },\n  },\n  first: {\n    get() {\n      return this[0];\n    },\n  },\n  last: {\n    get() {\n      return this[this.length - 1];\n    },\n  },\n});\n\nexport {};\n","// declare global {\n// }\n\ndeclare global {\n  interface Math {\n    range(from: number, to?: number): number;\n  }\n  interface Number {\n    pad(width: number): string;\n  }\n}\ndeclare var Math: Math;\n\nMath.range = (from: number, to?: number) => {\n  if (to === undefined) {\n    to = from;\n    from = 0;\n  }\n  return (to - from) * Math.random() + from;\n};\n/* eslint-disable */\nNumber.prototype.pad = function (width: number, z = \"0\") {\n  const num = this.toString();\n  return num.length >= width\n    ? num\n    : new Array(width - num.length + 1).join(z) + num;\n};\n\nexport {};\n","declare global {\n  interface ObjectConstructor {\n    isEmpty<T extends object>(obj: T): boolean;\n    map<T, O>(\n      o: Record<string, T>,\n      callBack: (v: T, k: string) => O,\n    ): Record<string, O>;\n  }\n}\n\nObject.assign(Object, {\n  isEmpty<T extends object>(obj: T) {\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n    return true;\n  },\n  map<Out extends Record<keyof In, any>, In extends object>(\n    obj: In,\n    callBack: <O, V>(value: V, key: keyof In) => O,\n  ): Out {\n    const out = {} as Out;\n\n    Object.entries(obj).forEach(([key, value]) => {\n      const k = key as keyof In;\n      out[k] = callBack(value, k);\n    });\n\n    return out;\n  },\n});\n\nexport {};\n","import moment from \"moment\";\n\nimport { Doctor, IDoctor, ModelStatus } from \"models\";\nimport {\n  IReqPaging,\n  IResList,\n  IResponse,\n  PDoctorsWorkingTime,\n} from \"./interface\";\nimport { RepoAccount } from \"./Account\";\nimport { WorkingTime } from \"models/workingTime\";\nimport { Booking } from \"../../models/booking\";\nimport { BookingStatus } from \"../../constants/enums\";\nimport {config, http} from \"../clients/Http\";\n\nconst time = moment(moment().format(\"YYYY-MM-DD\")).subtract(1, \"day\");\n\ninterface PayloadStatusBooking {\n  status: BookingStatus | string;\n  notes: string;\n  cancelReason?: string;\n}\n\nclass RepoDoctor extends RepoAccount<Doctor> {\n  constructor() {\n    super(\"doctors\");\n  }\n\n  query = async (params: IReqPaging) => {\n    const { data, total } = await super.query(params);\n    return { data: data?.map((item: Doctor) => new Doctor(item)), total };\n  };\n\n  async byClinic(partner_id: string, params: IReqPaging) {\n    params.filter = { ...params.filter, partner_id };\n    return this.query(params);\n  }\n\n  single = async (id: string) => {\n    const { data } = await http.get<Doctor>(`doctors/me`);\n    console.log('data=>>', data);\n    return new Doctor(data);\n  };\n  updatePassword = async (data: {\n    newPassword: string;\n    currentPassword: string;\n  }) => {\n    await http.patch(`doctors/me/update-password`, data);\n  };\n\n  updateWorkingTime = async (payload: WorkingTime) => {\n    const model = new WorkingTime(payload);\n    model.status =\n      model.status === ModelStatus.ACTIVE\n        ? ModelStatus.INACTIVE\n        : ModelStatus.ACTIVE;\n    const body = model.pickPayload([\"status\", \"date\"]);\n    const { data } = await http.patch<IResponse<WorkingTime>>(\n      `/working-time/${payload.id}`,\n      {\n        ...body,\n      },\n    );\n    return new WorkingTime(data.data!);\n  };\n\n  getWorkingTime = async (payload: any) => {\n    const {\n      data: { data, total },\n    } = await http.get<IResList<WorkingTime>>(\"/working-time\", {\n      params: payload,\n    });\n    return {\n      data: data?.map((item: WorkingTime) => new WorkingTime(item)),\n      total,\n    };\n  };\n\n  batchCreate = async (payload: PDoctorsWorkingTime) => {\n    const { data } = await http.post<IResList<WorkingTime>>(\n      \"/working-time/consult\",\n      {\n        ...payload,\n      },\n    );\n    return data.data?.map((item: WorkingTime) => new WorkingTime(item));\n  };\n\n  getConsultationWorkingTime = async (payload: any) => {\n    const {\n      data: { data, total },\n    } = await http.get<IResList<WorkingTime>>(\"/working-time/consult\", {\n      params: payload,\n    });\n    return {\n      data: data?.map((item: WorkingTime) => new WorkingTime(item)),\n      total,\n    };\n  };\n\n  protected pickPayload(payload: IDoctor) {\n    const model = new Doctor(payload);\n    return {\n      ...model.pickPayload([\n        \"firstName\",\n        \"lastName\",\n        \"phoneNumber\",\n        \"status\",\n        \"genderCode\",\n        \"avatar\",\n        \"nationCode\",\n        \"nationalityCode\",\n        \"academicRankCode\",\n        \"specialties\",\n        \"description\",\n        \"workplace\",\n        \"diseasesConsultantCode\",\n        \"jobTitle\",\n      ]),\n      partner_id: model.partner?.id,\n      specialty_ids: model.specialties?.map((item) => item.id) || [],\n    };\n  }\n\n  getBookings = async (payload: any) => {\n    const {\n      data: { data, total },\n    } = await http.get<IResList<Booking>>(`/booking/doctor`, {\n      params: payload,\n    });\n    return {\n      data: data?.map((item: Booking) => new Booking(item)),\n      total,\n    };\n  };\n\n  getBookingInfo = async (id: string) => {\n    const { data } = await http.get(`/booking/doctor/${id}`);\n    return new Booking(data);\n  };\n\n  reExaminationBooking = async (payload: any) => {\n    const { data } = await http.post(`/booking/doctor`, payload);\n    return new Booking(data);\n  };\n\n  updateStatusBooking = async (\n    id: string,\n    payloadStatusBooking: PayloadStatusBooking,\n  ) => {\n    const data = await http.patch<Booking>(\n      `/booking/doctor/${id}`,\n      {\n        ...payloadStatusBooking,\n      },\n    );\n    return new Booking(data.data);\n  };\n\n  async uploadAvatar(file: File, fileName: string) {\n    const {\n      data: { data },\n    } = await http.post<IResponse<any>>(`/${this.sub}/gen-upload-avatar-url`, {\n      contentType: \"image/jpeg\",\n      fullFileName: fileName,\n    });\n    await config.put(data.signedUrl, file, {\n      headers: { \"Content-Type\": file.type },\n    });\n    return data;\n  }\n}\n\nexport const doctor = new RepoDoctor();\n","import { IReqPaging, IResList, IResponse } from \"./interface\";\nimport { config, http, buildRequestParams } from \"../clients/Http\";\nimport { Clinic, SpecialtyType } from \"models\";\n\nclass RepoClinic {\n  async query(req: IReqPaging) {\n    const {\n      data: { data, total },\n    } = await http.get<IResList<Clinic>>(\"/partners\", {\n      params: buildRequestParams(req),\n    });\n\n    return {\n      data: data?.map((item) => new Clinic(item)) || [],\n      total,\n    };\n  }\n\n  search = async (keyword: string) => {\n    const res = await this.query({\n      limit: 10,\n      offset: 0,\n      filter: { status: \"ACTIVE\" },\n    });\n    return res.data;\n  };\n\n  queryAll = async () => {\n    const { data } = await http.get<IResList<Clinic>>(\"/partners\", {\n      params: { status: \"ACTIVE\" },\n    });\n    return data.data?.map((item) => new Clinic(item)) || [];\n  };\n\n  async querySpecialties(params: IReqPaging) {\n    const {\n      data: { data, total },\n    } = await http.get<IResList<SpecialtyType>>(\"/partners/specialtyType\");\n\n    return {\n      data: data?.map((item) => new SpecialtyType(item)) || [],\n      total,\n    };\n    // return [];\n    // return {\n    //   data: data?.data?.map((item: any) => new Clinic(item)) ?? [],\n    //   total: data?.data?.length ?? 0,\n    // };\n  }\n\n  async single(idClinic: string) {\n    const { data } = await http.get<IResponse<Clinic>>(`partners/${idClinic}`);\n    return new Clinic(data.data!);\n  }\n\n  async create(payload: Partial<Clinic>) {\n    const model = new Clinic(payload as Clinic);\n    const dataBody = model.pickPayload([\n      \"email\",\n      \"phoneNumber\",\n      \"name\",\n      \"address\",\n      \"phoneNumberExt1\",\n      \"phoneNumberExt2\",\n      \"description\",\n      \"type\",\n      \"logo\",\n      \"businessNo\",\n    ]);\n\n    const { data } = await http.post<IResponse<Clinic>>(\"/partners\", dataBody);\n    return data;\n  }\n\n  async update(code: string, payload: Partial<Clinic>) {\n    const model = new Clinic(payload as Clinic);\n    const dataBody = model.pickPayload([\n      \"email\",\n      \"phoneNumber\",\n      \"name\",\n      \"address\",\n      \"phoneNumberExt1\",\n      \"phoneNumberExt2\",\n      \"description\",\n      \"type\",\n      \"logo\",\n      \"businessNo\",\n      \"status\",\n    ]);\n    await http.patch(`/partners/${code}`, dataBody);\n    return true;\n  }\n\n  async uploadLogo(formData: FormData, fileName: string) {\n    const {\n      data: { data },\n    } = await http.post<IResponse<any>>(`/partners/upload-logo`, {\n      contentType: \"image/jpeg\",\n      fullFileName: fileName,\n    });\n    await config.put(data.signedUrl, formData, {\n      headers: { \"Content-Type\": \"image/png\" },\n    });\n    return data;\n  }\n}\n\nexport const clinic = new RepoClinic();\n","import { IReqPaging, IResList, IResponse } from \"./interface\";\nimport { http } from \"../clients/Http\";\nimport { Specialty, SpecialtyType } from \"models\";\n\nclass RepoSpecialties {\n  async query(req?: IReqPaging) {\n    const {\n      data: { data, total },\n    } = await http.get<IResList<SpecialtyType>>(\"/specialties\");\n\n    return {\n      data: data?.map((item) => new SpecialtyType(item)) || [],\n      total,\n    };\n  }\n\n  async querySpecialType(req?: IReqPaging) {\n    const {\n      data: { data, total },\n    } = await http.get<IResList<SpecialtyType>>(\"/specialty-types\");\n\n    return {\n      data: data?.map((item) => new SpecialtyType(item)) || [],\n      total,\n    };\n  }\n\n  async createSpecialtyType(payload: Partial<SpecialtyType>) {\n    const model = new SpecialtyType(payload as SpecialtyType);\n    const dataBody = model.pickPayload([\"code\", \"vi\", \"en\"]);\n\n    const { data } = await http.post<IResponse<SpecialtyType>>(\n      \"/specialties\",\n      dataBody,\n    );\n    return data;\n  }\n\n  async updateSpecialtyType(payload: Partial<SpecialtyType>) {\n    const model = new SpecialtyType(payload as SpecialtyType);\n    const dataBody = model.pickPayload([\"vi\", \"en\"]);\n    await http.patch(`/specialties/${payload.code}`, dataBody);\n    return true;\n  }\n\n  async querySpecialties(req?: IReqPaging) {\n    const {\n      data: { data, total },\n    } = await http.get<IResList<Specialty>>(\"/specialties\");\n\n    return {\n      data: data?.map((item) => new Specialty(item)) || [],\n      total,\n    };\n  }\n\n  async single(idSpecialty: string) {\n    const { data } = await http.get<IResponse<Specialty>>(\n      `specialties/${idSpecialty}`,\n    );\n    return data.data;\n  }\n\n  async createSpecialty(payload: Partial<Specialty>) {\n    const model = new Specialty(payload as Specialty);\n    const dataBody = model.pickPayload([\n      \"name\",\n      \"partnerId\",\n      \"description\",\n      \"specialtyType\",\n      \"status\",\n    ]);\n\n    const { data } = await http.post<IResponse<Specialty>>(\n      \"/specialties\",\n      dataBody,\n    );\n    return data;\n  }\n  async updateSpecialty(payload: Partial<Specialty>) {\n    const model = new Specialty(payload as Specialty);\n    const dataBody = model.pickPayload([\n      \"name\",\n      \"partnerId\",\n      \"description\",\n      \"specialtyType\",\n      \"status\",\n    ]);\n\n    await http.patch(`/specialties/${payload.id}`, dataBody);\n    return true;\n  }\n\n  async getByPartner(id: string) {\n    const {\n      data: { data, total },\n    } = await http.get<IResList<Specialty>>(`/specialties?partnerId=${id}`);\n    return {\n      data: data?.map((item) => new Specialty(item)) || [],\n      total,\n    };\n  }\n}\n\nexport const specialties = new RepoSpecialties();\n","import { I18n, Locale } from \"utils\";\nimport { config as clientConfig } from \"../clients/Http\";\nimport merge from \"lodash.merge\";\n\nconst en = new I18n();\n\nconst languages: Record<string, I18n> = {\n  \"en-US\": en,\n  \"vi-VN\": new I18n(\n    merge({}, en, {\n      widgets: {\n        menubar: { dashboard: \"Bảng điều khiển\", languages: \"Ngôn ngữ\" },\n        formLogin: {\n          username: \"Tài khoản\",\n          password: \"Mật khẩu\",\n          signIn: \"Đăng nhập\",\n        },\n      },\n      pages: {\n        login: {\n          forgot: \"Quên mật khẩu\",\n        },\n        error404: {\n          goToHome: \"Quay về trang chủ.\",\n        },\n        profileInfor:{\n          title: \"Thông Tin Cá Nhân\",\n        }\n      },\n    }),\n  ),\n};\n\nconst locales = [\n  {\n    title: \"Tiếng Việt\",\n    language: \"vi\",\n    country: \"VN\",\n  },\n\n  {\n    title: \"English\",\n    language: \"en\",\n    country: \"US\",\n  },\n];\n\ntype TCSupports = \"en\" | \"vi\";\ninterface ICSupports {\n  code: string;\n  en: string;\n  vn: string;\n}\ntype ICData = Record<string, ICSupports[]>;\ntype TCCode = \"en\" | \"vn\";\nconst mapCode: Record<TCSupports | string, TCCode> = { vi: \"vn\" };\n\nasync function fetchConfig(code: TCCode) {\n  const map = {\n    gender: \"gender.json\",\n    nations: \"nation.json\",\n    nationality: \"nationality.json\",\n    academicLevel: \"academic_level.json\",\n    hospital: \"clinic_hospital.json\",\n    diseases: \"diseases.json\",\n    jobTitle: \"jobTitle.json\",\n    area: \"area.json\",\n  };\n\n  const result: Record<string, ICData> = {};\n  const errors: Record<string, Error> = {};\n\n  await Promise.all(\n    Object.entries(map).map(([name, link]) => {\n      return clientConfig\n        .get(link)\n        .then((response) => {\n          result[name] = response.data;\n        })\n        .catch((error) => {\n          errors[name] = error;\n        });\n    }),\n  );\n\n  code = mapCode[code] || code;\n  const mapDataI18n = () => {\n    const out = {} as any;\n    Object.entries(result).forEach(([key, value]) => {\n      const out1 = {} as any;\n      // @ts-ignore\n      value?.map<ICSupports>((item: ICSupports) => {\n        return (out1[item.code] = item[code]);\n      });\n      out[key] = out1;\n      return out1;\n    });\n    return out;\n  };\n\n  return {\n    config: mapDataI18n(),\n    errors,\n  };\n}\n\nclass RepoI18n {\n  async locales() {\n    return locales.map((item) => new Locale(item));\n  }\n\n  async query(code: string) {\n    const { config } = await fetchConfig(code.split(\"-\")[0] as TCCode);\n    return merge({}, languages[code], { config });\n  }\n\n  async update(\n    code: string,\n    { locale, data }: { locale?: Locale; data: I18n },\n  ) {\n    await Promise.delay(200);\n    if (locale)\n      Object.assign(\n        locales.find((item) => {\n          return `${item.language}-${item.country}` === code;\n        }) || {},\n        locale,\n      );\n    return (languages[code] = merge({}, languages[code], data));\n  }\n}\n\nexport const i18n = new RepoI18n();\n","import { IAccount, Account } from \"./account\";\n\nexport type IPatient = IAccount &\n  Pick<\n    Patient,\n    | \"dateOfBirth\"\n    | \"tncAcceptance\"\n    | \"gender\"\n    | \"address\"\n    | \"nationCode\"\n    | \"nationalityCode\"\n    | \"job\"\n  >;\n\nexport class Patient extends Account {\n  constructor(props: IPatient) {\n    super();\n    this.assign(props, {\n      dateOfBirth: (value) => new Date(value),\n    });\n  }\n\n  dateOfBirth = new Date();\n  tncAcceptance = true;\n  gender!: string;\n  address!: string;\n  nationCode!: string;\n  nationalityCode!: string;\n  job!: string;\n}\n","import { RepoAccount } from \"./Account\";\nimport { http } from \"../clients/Http\";\nimport { Patient } from \"../../models/patient\";\nimport { IReqPaging, IResList, IResponse } from \"./interface\";\nimport { Doctor } from \"../../models\";\n\nclass RepoPatient extends RepoAccount<Patient> {\n  constructor() {\n    super(\"patients\");\n  }\n  query = async (params: IReqPaging) => {\n    const { data, total } = await super.query(params);\n    return { data: data?.map((item: Patient) => new Patient(item)), total };\n  };\n\n  update = async (id: string, data: Partial<Patient>) => {\n    const rs = await super.update(id, data);\n    return new Patient(rs!);\n  };\n\n  async single(id: string) {\n    const { data } = await http.get<IResponse<Patient>>(`patients/${id}`);\n    return new Patient(data.data!);\n  }\n}\n\nexport const patient = new RepoPatient();\n","export const RouteList = {\n  auth: {\n    root: \"/auth\",\n    login: \"/auth/login\",\n    reset: \"/auth/reset\",\n    register: \"/auth/register\",\n  },\n\n  dashboard: \"/\",\n  languages: \"/languages\",\n  profile: \"/profiles\",\n  schedules: \"/schedules\",\n  profileEdit: \"/profiles/edit\",\n  consultationSchedule: \"/consultation-schedule\",\n  examinationSchedule: \"/examination-schedule\",\n  bookingInfo: \"/booking-info\",\n  consultationCreate: \"/consultation-working-time-create\",\n  consultationWorkingTime: \"/consultation-working-time\",\n  ReExamintionBooking: \"/re-examintion-booking\",\n};\n","import { BaseModel, ModelStatus } from \"./base\";\n\nexport type ISpecialty = Pick<\n  Specialty,\n  \"id\" | \"name\" | \"partnerId\" | \"description\" | \"specialtyType\" | \"status\"\n>;\n\nexport class Specialty extends BaseModel {\n  constructor(props?: ISpecialty) {\n    super();\n    const date = (value: any) => new Date(value);\n    this.assign(props, {\n      createdAt: date,\n      updatedAt: date,\n    });\n  }\n  id?: string;\n  name = \"\";\n  description = \"\";\n  specialtyType = \"\";\n  partnerId = \"\";\n  status = ModelStatus.ACTIVE;\n  createdAt = new Date();\n  updatedAt = new Date();\n}\n","import { BaseModel } from \"./base\";\n\nexport type ISpecialtyType = Pick<\n  SpecialtyType,\n  \"id\" | \"code\" | \"en\" | \"vi\" | \"id\"\n>;\n\nexport class SpecialtyType extends BaseModel {\n  constructor(props: ISpecialtyType) {\n    super();\n    const date = (value: any) => new Date(value);\n    this.assign(props, {\n      createdAt: date,\n      updatedAt: date,\n    });\n  }\n  id!: string;\n  code!: string;\n  en!: string;\n  vi!: string;\n  createdAt!: Date;\n  updatedAt!: Date;\n}\n","import React from \"react\";\nimport { Button, FormControl, TextField, Box } from \"@material-ui/core\";\nimport { LoginFormValues, LoginFormProps } from \"./index.d\";\nimport { FormikBag, FormikProps, withFormik } from \"formik\";\n\nconst initialValue = {\n  email: \"\",\n  password: \"\",\n};\n\nconst InsideFormLogin: React.FC<\n  FormikProps<LoginFormValues> & LoginFormProps\n> = ({ values, errors, touched, handleChange, handleSubmit }) => {\n  return (\n    <Box>\n      <form onSubmit={handleSubmit}>\n        <FormControl fullWidth margin=\"dense\">\n          <TextField\n            error={!!(errors.email && touched.email)}\n            label=\"email\"\n            name=\"email\"\n            variant=\"outlined\"\n            value={values.email}\n            onChange={handleChange}\n          />\n        </FormControl>\n        <FormControl fullWidth margin=\"dense\" variant=\"outlined\">\n          <TextField\n            error={!!(errors.password && touched.password)}\n            label=\"password\"\n            name=\"password\"\n            variant=\"outlined\"\n            type=\"password\"\n            value={values.password}\n            onChange={handleChange}\n          />\n        </FormControl>\n        <FormControl fullWidth margin=\"normal\">\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Login\n          </Button>\n        </FormControl>\n      </form>\n    </Box>\n  );\n};\n\nconst onSubmit = async (\n  values: LoginFormValues,\n  {\n    setErrors,\n    props,\n    setSubmitting,\n  }: FormikBag<LoginFormProps, LoginFormValues>,\n) => {\n  setSubmitting(true);\n  await props.submit(values);\n};\n\nexport default withFormik<LoginFormProps, LoginFormValues>({\n  mapPropsToValues: () => ({\n    ...initialValue,\n  }),\n  handleSubmit: onSubmit,\n  displayName: \"LoginForm\",\n})(InsideFormLogin);\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: \"center\",\n    minHeight: 700,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  grid: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(5),\n    textAlign: \"left\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: 500,\n  },\n  logo: {\n    textAlign: \"center\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 100,\n    height: 100,\n    backgroundColor: theme.palette.grey.A100,\n    marginBottom: theme.spacing(5),\n  },\n  form: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(5),\n  },\n}));\n","import React, { useEffect } from \"react\";\nimport { Link as RouteLink, useHistory } from \"react-router-dom\";\nimport { Box, Paper, Typography, Link, Grid } from \"@material-ui/core\";\nimport FormLogin from \"components/FormLogin\";\nimport { RouteList } from \"routeList\";\nimport { LoginFormValues } from \"components/FormLogin/index.d\";\nimport useAuthentication, {\n  AuthStatus,\n} from \"stores/authenticationsStore/authentication\";\nimport { useStyles } from \"./index.type\";\n\nexport default () => {\n  const classes = useStyles();\n  const [state, actions] = useAuthentication();\n  const history = useHistory();\n  const onSubmit = async (value: LoginFormValues) => {\n    await actions.login(value);\n  };\n\n  useEffect(() => {\n    if (state.status === AuthStatus.LOGGED) {\n      history.push(RouteList.dashboard);\n      return;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.status, history]);\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"center\">\n        <Grid item xs={8} />\n        <Grid item xs={4} className={classes.grid}>\n          <Paper className={classes.paper}>\n            <Box\n              className={classes.logo}\n              display=\"flex\"\n              height=\"100%\"\n              alignItems=\"center\"\n            >\n              <Typography variant=\"h6\">Logo</Typography>\n            </Box>\n            <Box>\n              <Typography variant=\"h5\">Login</Typography>\n              <Typography variant=\"h6\">\n                Nhap email va mat khau de trai nghiem\n              </Typography>\n              <Box className={classes.form}>\n                <FormLogin submit={onSubmit} />\n                <Link component={RouteLink} to={RouteList.auth.reset}>\n                  forgot\n                </Link>\n              </Box>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(-2),\n    },\n  },\n}));\n\nexport default function LinearIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress color=\"secondary\" />\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const drawerWidth = 240;\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  hide: {\n    display: \"none\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginTop: theme.spacing(1),\n    padding: theme.spacing(0, 1, 0, 2),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n    background: theme.palette.text.disabled,\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.common.white,\n  },\n  IconMenu: {\n    color: theme.palette.common.white,\n  },\n  \"@global\": {\n    \".MuiDrawer-paper\": {\n      background: \"#3f4651\",\n    },\n  },\n}));\n","import { MockDataSidebarProps } from \"./SideBar\";\nimport { RouteList } from \"../../routeList\";\n\nexport const mockDataSidebar: MockDataSidebarProps = {\n  menus: [\n    {\n      title: \"Lich Kham\",\n      featureName: \"\",\n      icon: \"fa-youtube-play\",\n      subCreateMenus: [],\n      subMenus: [],\n      to: RouteList.examinationSchedule,\n    },\n    {\n      title: \"Lich Tu Van\",\n      featureName: \"\",\n      icon: \"fa-youtube-play\",\n      subCreateMenus: [],\n      subMenus: [],\n      to: RouteList.consultationSchedule,\n    },\n    {\n      title: \"Hoat Dong\",\n      featureName: \"\",\n      icon: \"fa-youtube-play\",\n      subCreateMenus: [],\n      subMenus: [],\n      to: RouteList.profile,\n    },\n    {\n      title: \"Ca nhan\",\n      featureName: \"\",\n      icon: \"fa-youtube-play\",\n      subCreateMenus: [],\n      subMenus: [],\n      to: RouteList.profile,\n    },\n    {\n      title: \"Lich tư vấn Làm Việc\",\n      featureName: \"\",\n      icon: \"fa-youtube-play\",\n      subCreateMenus: [],\n      subMenus: [],\n      to: RouteList.consultationWorkingTime,\n    },\n    {\n      title: \"Lich lam viec\",\n      featureName: \"\",\n      icon: \"fa-youtube-play\",\n      subCreateMenus: [],\n      subMenus: [],\n      to: RouteList.schedules,\n    },\n  ],\n};\n","import {\n  createStore,\n  createHook,\n  StoreActionApi,\n  createContainer,\n  createSubscriber,\n} from \"react-sweet-state\";\nimport { UIState } from \"./UIStore.d\";\n\nexport const UI_STORE = \"StoreUI\";\n\ntype StoreApi = StoreActionApi<UIState>;\ntype Actions = typeof actions;\n\nexport const initialState: UIState = {\n  sideBar: {\n    collapsed: false,\n  },\n};\n\nexport const actions = {\n  toggleSideBar: (collapsed: boolean) => ({ setState }: StoreApi) => {\n    const newSideBarState = { ...initialState.sideBar, collapsed };\n    setState({ ...initialState, sideBar: newSideBarState });\n  },\n};\n\nconst Store = createStore<UIState, Actions>({\n  initialState,\n  actions,\n  name: UI_STORE,\n});\n\nexport const UISubscriber = createSubscriber(Store);\n\nconst useUI = createHook(Store);\n\nexport const storeKey = `${Store.key.join(\"__\")}@__global__`;\n\ntype StoreContainerProps = {\n  initialState: UIState;\n};\nexport const UIContainer = createContainer<\n  UIState,\n  Actions,\n  StoreContainerProps\n>(Store, {\n  onInit: () => ({ setState }: StoreApi, { initialState }) => {\n    setState({ ...initialState });\n  },\n});\n\nexport default useUI;\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  IconButton,\n  Badge,\n  MenuItem,\n  Menu,\n} from \"@material-ui/core\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport AdjustIcon from \"@material-ui/icons/Adjust\";\nimport useAuthentication from \"stores/authenticationsStore/authentication\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    background: theme.palette.grey[50],\n    zIndex: theme.zIndex.drawer,\n    boxShadow: \"none\",\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst Header: React.FC<{ className: string }> = ({ className }) => {\n  const [, action] = useAuthentication();\n  const classes = useStyles();\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMobileMenuOpen = (event: any) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"primary\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"primary\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"primary\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton onClick={action.logout}>\n          <AdjustIcon />\n        </IconButton>\n        <p>Logout</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div>\n      <AppBar className={`${classes.appBar} ${className}`}>\n        <Toolbar>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"primary\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon color=\"primary\" />\n              </Badge>\n            </IconButton>\n            <IconButton color=\"primary\">\n              <AccountCircle color=\"primary\" />\n            </IconButton>\n            <IconButton onClick={action.logout} color=\"primary\">\n              <AdjustIcon color=\"primary\" />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport {\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { useStyles } from \"./index.style\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { mockDataSidebar } from \"./SideBarMenu\";\nimport { MenuProps } from \"./SideBar\";\nimport useUI from \"stores/UIstore/UIStore\";\nimport Header from \"../Header\";\n\nconst SideBar: React.FC = () => {\n  const [state, action] = useUI();\n  const classes = useStyles();\n  const handlerDrawer = () => {\n    action.toggleSideBar(!state.sideBar.collapsed);\n  };\n\n  return (\n    <>\n      <Header\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: state.sideBar.collapsed,\n        })}\n      />\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: state.sideBar.collapsed,\n          [classes.drawerClose]: !state.sideBar.collapsed,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: state.sideBar.collapsed,\n            [classes.drawerClose]: !state.sideBar.collapsed,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <Typography variant=\"h5\" noWrap color=\"primary\">\n            MebX\n          </Typography>\n          <IconButton onClick={handlerDrawer}>\n            {state.sideBar.collapsed ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <List>\n          {mockDataSidebar.menus.map((menu: MenuProps, index: number) => (\n            <Link\n              key={`${menu.title}_${index}`}\n              className={`${classes.link}`}\n              to={menu.to}\n            >\n              <ListItem button>\n                <ListItemIcon>\n                  {index % 2 === 0 ? (\n                    <InboxIcon className={classes.IconMenu} />\n                  ) : (\n                    <MailIcon className={classes.IconMenu} />\n                  )}\n                </ListItemIcon>\n                <ListItemText primary={menu.title} />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n      </Drawer>\n    </>\n  );\n};\n\nexport default SideBar;\n","import {\n  ChangeNotifier,\n  ValueListenable,\n} from \"utils/Notifier/ChangeNotifier\";\nimport { useValueChanged } from \"utils/Hooks\";\n\nclass ConnectNotifier\n  extends ChangeNotifier\n  implements ValueListenable<boolean> {\n  constructor() {\n    super();\n    window.addEventListener(\"online\", this._onlineListener);\n    window.addEventListener(\"offline\", this._onlineListener);\n  }\n\n  close() {\n    window.removeEventListener(\"online\", this._onlineListener);\n    window.removeEventListener(\"offline\", this._onlineListener);\n    super.close();\n  }\n\n  // tslint:disable-next-line:variable-name\n  private _onlineListener = () => {\n    if (this._value !== navigator.onLine) {\n      this._value = navigator.onLine;\n      this.notify();\n    }\n  };\n\n  // tslint:disable-next-line:variable-name\n  _value = navigator.onLine;\n  get value() {\n    return this._value;\n  }\n}\n\nexport const connectNotifier = new ConnectNotifier();\n\nexport const useConnection = () => useValueChanged(connectNotifier);\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport Header from \"components/Header\";\nimport SideBar from \"components/SideBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useUI from \"stores/UIstore/UIStore\";\nimport { drawerWidth } from \"../../components/SideBar/index.style\";\nimport { I18n } from \"../../utils\";\nimport { OptionsObject, useSnackbar } from \"notistack\";\nimport { connectNotifier } from \"../../stores/Connection/Connection\";\nimport { CloseButton } from \"../../components/Notistack\";\nimport { useI18n } from \"../../stores/Locale/LocaleStore\";\nimport {errorNotifier} from \"../../services/clients/Http\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  content: {\n    background: theme.palette.grey[50],\n    flexGrow: 1,\n    marginTop: theme.spacing(6),\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth + theme.spacing(7) + 1,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: drawerWidth,\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst useConnectSnackBar = (i18n: I18n) => {\n  const {\n    system: { notices },\n    errors,\n  } = i18n;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    const keyOf = (state: boolean) => `connectStatus-${state}`;\n\n    return connectNotifier.listen(() => {\n      const isOnline = connectNotifier.value;\n\n      closeSnackbar(keyOf(!isOnline));\n\n      const props: OptionsObject = isOnline\n        ? { variant: \"success\" }\n        : { variant: \"error\", autoHideDuration: null };\n\n      const key = keyOf(isOnline);\n\n      enqueueSnackbar(\n        <CloseButton\n          name={key}\n          message={isOnline ? notices.online : notices.offline}\n        />,\n        { key, ...props },\n      );\n    });\n  }, [closeSnackbar, enqueueSnackbar, notices]);\n\n  useEffect(() => {\n    let count = 0;\n    return errorNotifier.listen((error) => {\n      const key = `${error.name || \"unKnow\"}-${count++}`;\n\n      if (error.name === \"offline\") {\n        enqueueSnackbar(<CloseButton name={key} message={errors.offline} />, {\n          key,\n          variant: \"warning\",\n        });\n      } else {\n        enqueueSnackbar(\n          <CloseButton\n            name={key}\n            message={\n              errors[error.name] ||\n              error.message ||\n              error.name ||\n              \"Some thing went wrong!\"\n            }\n          />,\n          { key, variant: \"error\" },\n        );\n      }\n    });\n  }, [enqueueSnackbar, errors]);\n};\n\nconst Layout: React.FC = ({ children }) => {\n  const classes = useStyles();\n  const [state] = useUI();\n  const i18n = useI18n();\n  useConnectSnackBar(i18n);\n  return (\n    <div>\n      <SideBar />\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: state.sideBar.collapsed,\n        })}\n      >\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Spinner() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n}\n","import React, { createElement, useMemo, useRef, ReactNode } from \"react\";\nimport { useHistory, matchPath, RouteProps } from \"react-router-dom\";\nimport { Drawer } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport type IHashDrawerRoute = RouteProps & {\n  position?: \"top\" | \"right\" | \"bottom\" | \"left\";\n};\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  DrahDrawer: {\n    zIndex: theme.zIndex.drawer + 10,\n  },\n}));\nexport const HashDrawerSwitch = ({\n  routes,\n}: {\n  routes: IHashDrawerRoute[];\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { location } = history;\n  let { hash } = location;\n\n  hash = hash.slice(1);\n\n  const matchRoute = routes.find((route) => matchPath(hash, route));\n\n  const ref = useRef<ReactNode>();\n\n  useMemo(() => {\n    const render = (() => {\n      if (!matchRoute) return;\n      const match = matchPath(hash, matchRoute)!;\n      const props = {\n        match,\n        history,\n        location: history.location,\n      };\n\n      if (matchRoute.component) {\n        return createElement(matchRoute.component, props);\n      }\n\n      if (matchRoute.render) {\n        return matchRoute.render(props);\n      }\n\n      return matchRoute.children;\n    })();\n\n    if (render) ref.current = render;\n  }, [hash, history, matchRoute]);\n  return (\n    <Drawer\n      className={classes.DrahDrawer}\n      open={Boolean(matchRoute)}\n      anchor={matchRoute?.position || \"right\"}\n      onClose={() => history.goBack()}\n    >\n      {ref.current}\n    </Drawer>\n  );\n};\n","import * as React from \"react\";\nimport { RouteList } from \"../routeList\";\nimport { lazy } from \"react\";\n\nconst ProfileEdit = lazy(() => import(\"./Profile/edit\"));\nconst ConsulteantionCreate = lazy(\n  () => import(\"./Schedules/ConsultationWorkingTime/create\"),\n);\n\nconst ReExaminationBooking = lazy(\n  () => import(\"./Schedules/ReExaminationBooking\"),\n);\n\nexport interface IHashRoute {\n  path: string;\n  component: React.FC;\n}\nexport const HashRoutes = [\n  {\n    path: RouteList.profileEdit,\n    component: ProfileEdit,\n  },\n  {\n    path: RouteList.consultationCreate,\n    component: ConsulteantionCreate,\n  },\n  {\n    path: RouteList.ReExamintionBooking,\n    component: ReExaminationBooking,\n  },\n];\n","import React, { Suspense } from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router\";\nimport useAuthentication, {\n  AuthStatus,\n} from \"stores/authenticationsStore/authentication\";\nimport { RouteList } from \"../routeList\";\nimport Layout from \"./Layout\";\nimport Spinner from \"components/Spinner\";\nimport { HashDrawerSwitch } from \"../components/HashDrawer\";\nimport { HashRoutes, IHashRoute } from \"./HashRoutes\";\n\ninterface IProps {\n  component: React.FC;\n  path: string;\n  exact?: boolean;\n  isHash?: boolean;\n}\n\nconst renderRoute = (Component: React.FC) => (props: RouteProps) => {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <Component {...props} />\n    </Suspense>\n  );\n};\nconst PrivateRoute: React.FC<IProps & RouteProps> = ({\n  component,\n  isHash,\n  ...rest\n}) => {\n  const [state] = useAuthentication();\n  if (state?.status === AuthStatus.LOGGED) {\n    return (\n      <>\n        <Layout>\n          <Route {...rest} component={renderRoute(component)} />\n        </Layout>\n        {\n          <HashDrawerSwitch\n            routes={HashRoutes.map<IHashRoute>((item: IHashRoute) => {\n              return {\n                path: item.path,\n                component: renderRoute(item.component),\n              };\n            })}\n          />\n        }\n      </>\n    );\n  }\n  return <Redirect to={{ pathname: RouteList.auth.login }} />;\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { RouteList } from \"../routeList\";\nimport Login from \"./Login\";\nimport LinearIndeterminate from \"../components/LinearIndeterminate\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { Box, Button, FormControl } from \"@material-ui/core\";\n\nconst DashBoard = lazy(() => import(\"./DashBoard\"));\nconst Profile = lazy(() => import(\"./Profile\"));\nconst SchedulesPage = lazy(() => import(\"./Schedules\"));\nconst ConsultationSchedule = lazy(() => import(\"./ConsultationSchedule\"));\nconst Examinationchedule = lazy(() => import(\"./Examination\"));\nconst BookingInfo = lazy(() => import(\"./ConsultationSchedule/BookingInfo\"));\nconst SchedulesConsultationPage = lazy(\n  () => import(\"./Schedules/ConsultationWorkingTime\"),\n);\n\nconst Routes: React.FC = (): JSX.Element => {\n  return (\n    <>\n      <LinearIndeterminate />\n      <Switch>\n        <Route path={RouteList.auth.login} component={Login} />\n        <PrivateRoute\n          exact={true}\n          path={RouteList.dashboard}\n          component={DashBoard}\n        />\n        <PrivateRoute\n          exact={true}\n          path={RouteList.profile}\n          component={Profile}\n        />\n        <PrivateRoute\n          exact={true}\n          path={RouteList.schedules}\n          component={SchedulesPage}\n        />\n        <PrivateRoute\n          exact={true}\n          path={RouteList.consultationSchedule}\n          component={ConsultationSchedule}\n        />\n        <PrivateRoute\n          exact={true}\n          path={RouteList.bookingInfo}\n          component={BookingInfo}\n        />\n        <PrivateRoute\n          exact={true}\n          path={RouteList.consultationWorkingTime}\n          component={SchedulesConsultationPage}\n        />\n        <PrivateRoute\n          exact={true}\n          path={RouteList.examinationSchedule}\n          component={Examinationchedule}\n        />\n      </Switch>\n    </>\n  );\n};\nexport default Routes;\n","import { defaults, StoreState } from \"react-sweet-state\";\nimport { isDevEnv } from \"config\";\n\nconst logger = (storeState: StoreState<any>) => (next: any) => (fn: any) => {\n  console.groupCollapsed(\"Store\", storeState.key);\n\n  console.log(\"prev state:\", JSON.parse(JSON.stringify(storeState.getState())));\n  console.log(\"payload\", fn);\n  const result = next(fn);\n  console.log(\"next state\", JSON.parse(JSON.stringify(storeState.getState())));\n  console.groupEnd();\n  return result;\n};\n\nif (isDevEnv()) {\n  defaults.middlewares.add(logger);\n}\n","import { defaults, StoreState } from \"react-sweet-state\";\nimport databases from \"storages\";\nimport { AUTHENTICATION_STORE } from \"stores/authenticationsStore/authentication\";\nimport { UI_STORE } from \"../stores/UIstore/UIStore\";\nimport { I18N_STORE } from \"../stores/Locale/LocaleStore\";\nimport { BLOCKSPLITTIME_STORE } from \"../components/BlockSplit/Store\";\n\nconst WHITE_LIST = [\n  AUTHENTICATION_STORE,\n  UI_STORE,\n  I18N_STORE,\n  BLOCKSPLITTIME_STORE,\n];\n\nconst persistent = (storeState: StoreState<any>) => (next: any) => (\n  fn: any,\n) => {\n  const result = next(fn);\n  const { key } = storeState;\n  const isWhiteList: string[] = WHITE_LIST.filter((store) =>\n    key.includes(store),\n  );\n  if (isWhiteList.length > 0) {\n    const state = storeState.getState();\n    databases.setItem(storeState.key, state).catch((err: Error) => {\n      console.error(err);\n    });\n  }\n\n  return result;\n};\n\ndefaults.middlewares.add(persistent);\n","import React, { Props, useCallback } from \"react\";\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  ThemeOptions,\n  ThemeProvider,\n  Theme,\n} from \"@material-ui/core\";\n\nimport defaultTheme from \"./default\";\nimport merge from \"lodash.merge\";\n\nconst createProvider = (options?: ThemeOptions) => ({\n  children,\n}: Props<any>) => {\n  const extend = useCallback((outerTheme: Theme) => {\n    return merge({}, outerTheme, options);\n  }, []);\n  return <ThemeProvider theme={extend}>{children}</ThemeProvider>;\n};\n\nexport const RootThemeProvider = ({ children }: Props<any>) => {\n  return (\n    <MuiThemeProvider theme={createMuiTheme(defaultTheme.theme)}>\n      {children}\n    </MuiThemeProvider>\n  );\n};\n\nexport const SizeDownProvider = createProvider(defaultTheme.sizeDown);\n","import { ITheme } from \"themes/Interface\";\nimport theme from \"./main\";\n\nexport default {\n  theme,\n} as ITheme;\n","import {ThemeOptions} from \"@material-ui/core\";\n\nexport default {\n  palette: {\n    common: {black: \"rgba(0, 0, 0, 1)\", white: \"#fff\"},\n    background: {paper: \"#fff\", default: \"rgba(238, 238, 238, 1)\"},\n    primary: {\n      light: \"#4bc5ff\",\n      main: \"#1eb7ff\",\n      dark: \"#1580b2\",\n      contrastText: \"rgba(255, 255, 255, 1)\",\n    },\n    warning: {\n      light: \"#ffb333\",\n      main: \"#ffa000\",\n      dark: \"#f27212\",\n      contrastText: \"rgba(255, 255, 255, 1)\",\n    },\n    secondary: {\n      light: \"rgba(140, 220, 142, 1)\",\n      main: \"rgba(89, 177, 93, 1)\",\n      dark: \"rgba(51, 173, 56, 1)\",\n      contrastText: \"#fff\",\n    },\n    success: {\n      light: \"#48c75c\",\n      main: \"#1bb934\",\n      dark: \"#128124\",\n      contrastText: \"#fff\",\n    },\n    info: {\n      light: \"#617eaa\",\n      main: \"#3a5e95\",\n      dark: \"#284168\",\n      contrastText: \"#fff\",\n    },\n    error: {\n      light: \"#e57373\",\n      main: \"#f44336\",\n      dark: \"#d32f2f\",\n      contrastText: \"#fff\",\n    },\n    text: {\n      primary: \"rgba(0, 0, 0, 0.87)\",\n      secondary: \"rgba(0, 0, 0, 0.54)\",\n      disabled: \"rgba(0, 0, 0, 0.38)\",\n      hint: \"rgba(0, 0, 0, 0.38)\",\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Raleway',\n      'Arial'\n    ].join(','),\n  },\n  grey: {\n    primary: \"#8493a5\",\n  },\n  overrides: {\n    MuiListItemIcon: {\n      root: {\n        minWidth: 38,\n      },\n    },\n    MuiCssBaseline: {\n      \"@global\": {\n        \"@font-face\": ['Helvetica Neue\"'],\n      },\n    },\n  },\n} as ThemeOptions;\n","import React, {\n  FC,\n  ComponentType,\n  useState,\n  useLayoutEffect,\n  useEffect,\n} from \"react\";\n\nimport {\n  UIContainer,\n  storeKey,\n  initialState as initialStoreState,\n} from \"./UIStore\";\nimport databases from \"storages\";\nimport { useLocale } from \"../Locale/LocaleStore\";\nimport { useLoaderActions } from \"../loader\";\nimport { RootThemeProvider } from \"../../themes/Providers\";\n\nconst withUIPersist = <P extends object>(\n  Component: ComponentType<P>,\n): FC<P & any> => ({ ...props }: any) => {\n  const [storePersisted, setStorePersisted] = useState(initialStoreState);\n  const loader = useLoaderActions();\n  const [, localeActions] = useLocale();\n  useEffect(() => {\n    loader.push(localeActions.load());\n  }, []);\n  useLayoutEffect(() => {\n    (async function getPersistData() {\n      const data = await databases.getItem(storeKey).catch((err: Error) => {\n        // tslint:disable-next-line:no-console\n        console.error(err);\n      });\n      if (data) {\n        setStorePersisted({\n          ...data,\n          initiated: true,\n        });\n      } else {\n        setStorePersisted({\n          ...initialStoreState,\n          initiated: true,\n        });\n      }\n    })();\n  }, []);\n  if (storePersisted && !storePersisted.initiated) return null;\n  return (\n    <UIContainer isGlobal={true} initialState={storePersisted}>\n      <RootThemeProvider>\n        <Component {...(props as P)} />\n      </RootThemeProvider>\n    </UIContainer>\n  );\n};\n\nexport default withUIPersist;\n","import React, { ComponentType, FC, useLayoutEffect, useState } from \"react\";\nimport { I18NContainer, initialState, storeKey } from \"./LocaleStore\";\nimport databases from \"storages\";\n\nconst withI18nPersist = <P extends object>(\n  Component: ComponentType<P>,\n): FC<P & any> => ({ ...props }: any) => {\n  const [storePersisted, setStorePersisted] = useState(initialState);\n\n  useLayoutEffect(() => {\n    (async function getPersistData() {\n      const data = await databases.getItem(storeKey).catch((err: Error) => {\n        console.error(err);\n      });\n      if (data) {\n        setStorePersisted({\n          ...data,\n          initiated: true,\n        });\n      } else {\n        setStorePersisted({\n          ...initialState,\n          initiated: true,\n        });\n      }\n    })();\n  }, []);\n\n  if (storePersisted && !storePersisted.initiated) return null;\n  return (\n    <I18NContainer isGlobal={true} initialState={storePersisted}>\n      <Component {...(props as P)} />\n    </I18NContainer>\n  );\n};\n\nexport default withI18nPersist;\n","import React from \"react\";\nimport Routes from \"./pages/Routes\";\nimport \"middlewares/logger\";\nimport \"middlewares/persistent\";\nimport withUIPersist from \"./stores/UIstore/withUIStore\";\nimport withI18nPersist from \"./stores/Locale/withLocalePersist\";\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport withAuthPersist from \"./stores/authenticationsStore/withAuthPersist\";\n\nexport const App: React.FC = () => {\n  return <Routes />;\n};\n\nexport default withI18nPersist(withUIPersist(withAuthPersist(App)));\n","import React, { ComponentType, FC, useLayoutEffect, useState } from \"react\";\nimport {\n  AuthenticationContainer,\n  initialStoreState,\n  storeKey,\n} from \"./authentication\";\nimport databases from \"storages\";\n\nconst withAuthPersist = <P extends object>(\n  Component: ComponentType<P>,\n): FC<P & any> => ({ ...props }: any) => {\n  const [storePersisted, setStorePersisted] = useState(initialStoreState);\n\n  useLayoutEffect(() => {\n    (async function getPersistData() {\n      const data = await databases.getItem(storeKey).catch((err: Error) => {\n        console.error(err);\n      });\n      if (data) {\n        setStorePersisted({\n          ...data,\n          initiated: true,\n        });\n      } else {\n        setStorePersisted({\n          ...initialStoreState,\n          initiated: true,\n        });\n      }\n    })();\n  }, []);\n\n  if (storePersisted && !storePersisted.initiated) return null;\n  return (\n    <AuthenticationContainer isGlobal={true} initialState={storePersisted}>\n      <Component {...(props as P)} />\n    </AuthenticationContainer>\n  );\n};\n\nexport default withAuthPersist;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"serviceWorker\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { QueryParamProvider } from \"use-query-params\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <QueryParamProvider ReactRouterRoute={Route}>\n        <SnackbarProvider>\n          <App />\n        </SnackbarProvider>\n      </QueryParamProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export enum ModelStatus {\n  ACTIVE = \"ACTIVE\",\n  INACTIVE = \"INACTIVE\",\n}\n\nexport abstract class BaseModel {\n  protected assign<K extends keyof this>(\n    props: Partial<Record<K, any>> | any,\n    map?: Partial<Record<K, (value: any) => this[K]>>,\n  ) {\n    if (!props) return;\n    props.id = props.id || props._id;\n    const mapValues = {} as this;\n\n    Object.getOwnPropertyNames(this).forEach((name) => {\n      const key = name as K;\n      if (map && map[key]) {\n        mapValues[key] = map[key]!(props[key]);\n      } else {\n        mapValues[key] = props[key];\n      }\n    });\n\n    Object.assign(this, mapValues);\n  }\n\n  pickPayload(\n    keys: (keyof this)[],\n    map: { [key in keyof this]?: <T = any>(value: this[key]) => T } = {},\n  ) {\n    const payload: Record<string, any> = {};\n\n    keys.forEach((key) => {\n      const value = map[key]?.(this[key]) ?? this[key];\n      if (value === undefined || value === null) return;\n      payload[key as string] = value;\n    });\n\n    return payload;\n  }\n\n  static ObjectIDTime(id: string) {\n    return new Date(parseInt(id.substring(0, 8), 16) * 1000);\n  }\n\n  static statusFromBool(bool: boolean) {\n    return bool ? ModelStatus.ACTIVE : ModelStatus.INACTIVE;\n  }\n\n  static statusToBool(status: ModelStatus) {\n    return status === ModelStatus.ACTIVE;\n  }\n}\n","import {\n  createContainer,\n  createHook,\n  createStore,\n  StoreActionApi,\n} from \"react-sweet-state\";\nimport { LoginFormValues } from \"components/FormLogin/index.d\";\nimport { auth as authRepo } from \"services/repos/Auth/index\";\nimport { setHttpAuth } from \"services/clients/Http\";\nimport { AccountRole, AccountStatus } from \"models/account\";\nimport databases from \"../../storages\";\n\ntype StoreApi = StoreActionApi<IAuthState>;\ntype Actions = typeof actions;\nexport enum AuthStatus {\n  INITIAL,\n  VERIFY,\n  LOGGED,\n  PROTECTED,\n}\n// @ts-ignore\n\nexport interface IAuthState<A = any> {\n  account?: A;\n  status: AuthStatus;\n  token?: string;\n  initiated: boolean;\n}\n\nexport const initialStoreState = {\n  account: {\n    id: \"\",\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    password: \"\",\n    role: AccountRole.DOCTOR,\n    status: AccountStatus.ACTIVE,\n    active: true,\n    avatar: \"\",\n  },\n  status: AuthStatus.INITIAL,\n  token: \"\",\n  initiated: false,\n};\nexport const AUTHENTICATION_STORE = \"StoreAuthentication\";\n\nexport const actions = {\n  login: (value: LoginFormValues) => async ({\n    getState,\n    setState,\n  }: StoreActionApi<IAuthState>) => {\n    try {\n      const state = await authRepo.login(value.email, value.password);\n      setHttpAuth(state.token);\n      setState({ ...state, status: AuthStatus.LOGGED });\n    } catch (error) {\n      console.warn(\"TODO:\", \"Show message login error\");\n    }\n  },\n  logout: () => async ({ setState }: StoreApi) => {\n    try {\n      await databases.removeItem(storeKey);\n      setState({ ...initialStoreState });\n    } catch (error) {\n      await databases.removeItem(storeKey);\n      setState({ ...initialStoreState });\n      console.warn(\"TODO:\", \"Show message login error\");\n    }\n  },\n};\n\nconst Store = createStore<IAuthState, Actions>({\n  initialState: initialStoreState,\n  actions,\n  name: AUTHENTICATION_STORE,\n});\nconst useAuthentication = createHook(Store);\n\nexport const storeKey = `${Store.key.join(\"__\")}@__global__`;\n\ntype StoreContainerProps = {\n  initialState: IAuthState;\n};\n\nexport const AuthenticationContainer = createContainer<\n  IAuthState,\n  Actions,\n  StoreContainerProps\n>(Store, {\n  onInit: () => ({ setState }: StoreApi, { initialState }) => {\n    setHttpAuth(initialState.token);\n    setState({ ...initialState });\n  },\n});\n\nexport default useAuthentication;\n","import { BaseModel } from \"./base\";\n\nexport enum ModelStatus {\n  ACTIVE = \"ACTIVE\",\n  INACTIVE = \"INACTIVE\",\n}\nexport enum AccountRole {\n  ADMIN = \"MEBX_ADMIN\",\n  CLINIC = \"CLINIC_ADMIN\",\n  DOCTOR = \"DOCTOR\",\n  PATIENT = \"PATIENT\",\n}\n\nexport enum AccountStatus {\n  ACTIVE = \"ACTIVE\",\n  INACTIVE = \"INACTIVE\",\n}\n\nexport type IAccount = Pick<\n  Account,\n  | \"id\"\n  | \"firstName\"\n  | \"lastName\"\n  | \"phoneNumber\"\n  | \"password\"\n  | \"email\"\n  | \"role\"\n  | \"status\"\n  | \"active\"\n  | \"avatar\"\n  | \"groupId\"\n  | \"externalId\"\n>;\n\nexport class Account extends BaseModel {\n  constructor(props?: IAccount) {\n    super();\n    this.assign(props);\n  }\n\n  protected assign<K extends keyof this>(\n    props: Partial<Record<K, any>> | any,\n    map?: Partial<Record<K, (value: any) => this[K]>>,\n  ) {\n    if (!props) return;\n    props.createdAt = props.id ? BaseModel.ObjectIDTime(props.id) : new Date();\n    super.assign(props, map);\n  }\n\n  id = \"\";\n\n  firstName = \"\";\n  lastName = \"\";\n  phoneNumber = \"\";\n  email = \"\";\n  status = ModelStatus.INACTIVE;\n  role = AccountRole.PATIENT;\n  groupId = \"\";\n  externalId = \"\";\n  password?: string;\n  active?: boolean;\n  avatar?: string;\n  createdAt = new Date();\n\n  get fullName() {\n    return `${this.firstName} ${this.lastName}`;\n  }\n\n  get isActive() {\n    return BaseModel.statusToBool(this.status);\n  }\n}\n","export * from \"./Strings\";\nexport * from \"./Completer\";\nexport * from \"./Validations\";\nexport * from \"./Promise\";\nexport * from \"./I18n\";\nexport * from \"./Locale\";\nexport * from \"./Array\";\nexport * from \"./Math\";\nexport * from \"./Object\";\n","import {\n  createStore,\n  createHook,\n  createContainer,\n  StoreActionApi,\n} from \"react-sweet-state\";\n\nimport { I18n, Locale } from \"utils\";\n\nimport { i18n as repoI18n } from \"services/repos\";\n\nexport const I18N_STORE = \"I18N\";\n\nexport interface II8nState<A = any> {\n  initial: boolean;\n  supports: Array<Locale>;\n  locale: Locale;\n  i18n: I18n;\n  initiated: boolean;\n}\n\ntype StoreApi = StoreActionApi<II8nState>;\ntype Actions = typeof actions;\n\nexport const actions = {\n  load: (code?: string) => async ({ getState, setState }: StoreApi) => {\n    let { supports, locale } = getState();\n    code = code || locale.code;\n\n    if (!supports.length) {\n      supports = await repoI18n.locales();\n    }\n\n    locale = supports.find((item) => item.code === code) || supports?.first;\n    setState({ locale, supports, initial: true });\n    const i18n = await repoI18n.query(locale.code);\n    setState({ i18n });\n  },\n\n  update: (props: { locale?: Locale; data: I18n }) => async ({\n    setState,\n    getState,\n  }: StoreApi) => {\n    const { locale } = getState();\n    const i18n = await repoI18n.update(locale.code, props);\n    setState({ i18n, locale: props.locale || locale });\n  },\n};\nexport const initialState = {\n  initial: false,\n  supports: Array<Locale>(),\n  locale: Locale.system(),\n  i18n: new I18n(),\n  initiated: false,\n};\n\nconst Store = createStore({\n  name: \"I18n\",\n  initialState,\n  actions,\n});\n\ntype StoreContainerProps = {\n  initialState: II8nState;\n};\nexport const I18NContainer = createContainer<\n  II8nState,\n  Actions,\n  StoreContainerProps\n>(Store, {\n  onInit: () => ({ setState }: StoreApi, { initialState }) => {\n    setState({ ...initialState });\n  },\n});\n\nexport const storeKey = `${Store.key.join(\"__\")}@__global__`;\n\nexport const getI18n = createHook(Store, { selector: ({ i18n }) => i18n });\n\nexport const useI18n = () => getI18n()[0] as I18n;\n\nexport const useLocale = createHook(Store, {\n  selector: ({ locale, supports, initial }) => ({\n    locale,\n    supports,\n    initial,\n  }),\n});\n","import localForage from \"localforage\";\nimport { FnType } from \"constants/types\";\n\ntype ILocalForage = {\n  config: FnType;\n  setItem: FnType;\n  getItem: FnType;\n};\n\ntype IDatabase = ILocalForage | any;\n\nlocalForage.config({\n  driver: localForage.INDEXEDDB, // Force WebSQL; same as using setDriver()\n  name: \"webdoctor\",\n  version: 1.0,\n  size: 4980736, // Size of database, in bytes. WebSQL-only for now.\n  storeName: \"keyvaluepairsdoctor\", // Should be alphanumeric, with underscores.\n  description:\n    \"This Database is for storing the entries responses in the indexedDB\",\n});\n\nconst databases: IDatabase = localForage.createInstance({\n  name: \"doctor\",\n  storeName: \"doctor\",\n});\n\nexport default databases;\n","import { BaseModel } from \"./base\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport { AppointmentModel } from \"@devexpress/dx-react-scheduler\";\nimport { convertToUTC7 } from \"../utils/Date\";\n\nexport type IWorkingTime = Pick<\n  WorkingTime,\n  | \"id\"\n  | \"doctorId\"\n  | \"status\"\n  | \"date\"\n  | \"from\"\n  | \"to\"\n  | \"remainSeats\"\n  | \"seats\"\n>;\n\nexport interface ISession {\n  from: number;\n  to: number;\n}\n\nexport class WorkingTime extends BaseModel {\n  constructor(props?: IWorkingTime) {\n    super();\n    this.assign(props, {\n      date: (value) => {\n        return convertToUTC7(value).format(\"YYYY-MM-DD\").toString();\n      },\n    });\n  }\n\n  id: string = \"\";\n  doctorId: string = \"\";\n  status: string = \"\";\n  date: string = \"\";\n  from!: number;\n  to!: number;\n  remainSeats!: number;\n  seats!: number;\n\n  static toSchedule(workingTimes: WorkingTime[]) {\n    return workingTimes.reduce<(AppointmentModel & { working: WorkingTime })[]>(\n      (schedules, workingTime) => {\n        const date = dayjs(workingTime.date);\n        schedules.push({\n          working: workingTime,\n          startDate: date.clone().add(workingTime.from, \"minute\").toDate(),\n          endDate: date.clone().add(workingTime.to, \"minute\").toDate(),\n        });\n        return schedules;\n      },\n      [],\n    );\n  }\n\n  static minusFormat(minus: number) {\n    const hours = Math.floor(minus / 60).pad(2);\n    const min = (minus % 60).pad(2);\n    return `${hours}:${min}`;\n  }\n}\n","export interface Listenable {\n  readonly closed: boolean;\n  readonly hasListener: boolean;\n  listen(listener: () => void): () => void;\n  close: () => void;\n}\n\nexport interface ValueListenable<T> extends Listenable {\n  readonly value: T;\n}\n\nexport class ChangeNotifier implements Listenable {\n  private $listeners: (() => void)[] = [];\n  private $closed = false;\n  get closed() {\n    return this.$closed;\n  }\n  get hasListener() {\n    this.$debugClose();\n    return !!this.$listeners.length;\n  }\n\n  protected notify() {\n    this.$debugClose();\n    const listeners = this.$listeners.slice();\n    listeners.forEach((listener) => listener.call(this));\n  }\n\n  listen(listener: () => void): () => void {\n    this.$debugClose();\n    const { $listeners } = this;\n\n    $listeners.push(listener);\n\n    return () => $listeners.remove(listener);\n  }\n\n  close() {\n    this.$debugClose();\n    this.$listeners = [];\n    this.$closed = false;\n  }\n\n  private $debugClose() {\n    if (this.$closed) throw Error(\"ChangeNotifier has closed\");\n  }\n}\n","import { BaseModel } from \"./base\";\nimport { BookingStatus } from \"../constants/enums\";\nimport { Doctor } from \"./doctor\";\nimport { Clinic } from \"./clinic\";\nimport isObject from \"lodash/isObject\";\n\nexport type IBooking = Pick<\n  Booking,\n  | \"id\"\n  | \"notes\"\n  | \"description\"\n  | \"status\"\n  | \"doctor\"\n  | \"type\"\n  | \"partner\"\n  | \"specialty\"\n  | \"start\"\n  | \"end\"\n  | \"patient\"\n  | \"hasMedicalInsurance\"\n  | \"userId\"\n  | \"diseaseCodes\"\n  | \"additionalData\"\n  | \"serialId\"\n>;\n\nexport class Booking extends BaseModel {\n  constructor(props?: IBooking) {\n    super();\n    this.assign(props);\n    if (props?.doctor && isObject(props?.doctor)) {\n      this.doctor = new Doctor(props?.doctor);\n    }\n    if (props?.partner && isObject(props?.partner)) {\n      this.partner = new Clinic(props?.partner);\n    }\n  }\n\n  id: string = \"\";\n  notes: string = \"\";\n  description: string = \"\";\n  status: BookingStatus = BookingStatus.NEW;\n  type: string = \"\";\n  doctor?: Doctor;\n  partner?: Clinic;\n  specialty: {\n    name: string;\n    id: string;\n    _id: string;\n  } = {\n    name: \"\",\n    id: \"\",\n    _id: \"\",\n  };\n  start: string = \"\";\n  end: string = \"\";\n  patient: any = \"\";\n  hasMedicalInsurance: boolean = true;\n  userId: string = \"\";\n  diseaseCodes: string[] = [];\n  additionalData: object = {};\n  serialId: string = \"\";\n}\n","import { IConfig } from \"./index\";\n\nexport const REACT_APP_API_SERVER = process.env.REACT_APP_API_SERVER;\n\nexport const config: IConfig = {\n  API: {\n    ROOT_ENDPOINT: `${REACT_APP_API_SERVER}`,\n    DOCTOR_SERVICE: `/doctors`,\n    AUTH_SERVICE: `/auth/login`,\n    PARTNER_SERVICE: `$/partner`,\n    SPECIALTYPE_SERVICE: `/partner`,\n  },\n};\n\nexport default config;\n","import dev from \"./development\";\n\nexport interface IConfig {\n  API: {\n    ROOT_ENDPOINT: string;\n    DOCTOR_SERVICE: string;\n    AUTH_SERVICE: string;\n    PARTNER_SERVICE: string;\n    SPECIALTYPE_SERVICE: string;\n  };\n}\n\nlet config: IConfig = { ...dev };\nconst env = process.env.REACT_APP_ENV;\n\nexport const isDevEnv = () => {\n  return process.env.REACT_APP_ENV === \"dev\";\n};\n\nif (env === \"dev\") {\n  config = dev;\n} else {\n}\n\nexport default {\n  // Add common config values here\n  env,\n  ...config,\n};\n","export * from \"./interface\";\n\nexport * from \"./Auth\";\nexport * from \"./Doctor\";\nexport * from \"./Clinic\";\nexport * from \"./Specialties\";\nexport * from \"./I18n\";\nexport * from \"./Patient\";\n","import { ChangeNotifier, ValueListenable } from \"./ChangeNotifier\";\n\nexport class ValueNotifier<T = any>\n  extends ChangeNotifier\n  implements ValueListenable<T> {\n  constructor(protected $value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.$value;\n  }\n\n  set value(value) {\n    if (this.$value !== value) {\n      this.$value = value;\n      this.notify();\n    }\n  }\n}\n","import axios, { AxiosError } from \"axios\";\nimport { IReqPaging } from \"../repos/interface\";\nimport { ValueNotifier } from \"utils/Notifier/ValueNotifier\";\nimport { ChangeNotifier } from \"utils/Notifier/ChangeNotifier\";\nimport { Completer } from \"../../utils\";\n\nexport const http = axios.create({\n  baseURL: process.env.REACT_APP_API_SERVER,\n});\n\nexport const config = axios.create({\n  baseURL: process.env.REACT_APP_CONFIG_SERVER,\n});\n\nconst valueNotifier = new ValueNotifier<Error>({} as Error);\n\nfunction debounce<T = unknown>(time: number, gCall?: () => T) {\n  let completer: Completer<T>;\n  let timeout: NodeJS.Timeout;\n\n  return (call?: () => T) => {\n    if (completer?.completed !== false) {\n      completer = new Completer<T>();\n    }\n\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      completer.resolve((call || gCall)?.());\n    }, time);\n  };\n}\n\nclass ErrorNotifier extends ChangeNotifier {\n  constructor(protected valueChanged: ValueNotifier<Error>) {\n    super();\n    valueChanged.listen(() => debounce(200, () => this.notify()));\n  }\n\n  listen(listener: (error: Error) => void) {\n    return super.listen(() => listener(this.valueChanged.value));\n  }\n\n  close() {\n    this.valueChanged.close();\n    super.close();\n  }\n}\n\nexport const errorNotifier = new ErrorNotifier(valueNotifier);\n\nconst createError = (name: string, message?: string) => {\n  const error = new Error(message);\n  error.name = name;\n  return error;\n};\n\nconst offlineHandle = () => {\n  valueNotifier.value = createError(\"offline\", \"You are in offline mode\");\n  return Promise.reject(\"Offline\");\n};\n\nhttp.interceptors.response.use(\n  (res) => {\n    if (!navigator.onLine) {\n      return offlineHandle();\n    }\n    if (res.data?.data?.data) {\n      return res.data.data;\n    } else {\n      return res;\n    }\n    return res;\n  },\n  async (error: AxiosError) => {\n    return Promise.reject(error);\n  },\n);\n\nexport const buildRequestParams = (req: IReqPaging) => {\n  const { offset, limit, sort, filter } = req;\n\n  const params: Record<string, any> = { offset, limit, ...filter };\n  sort &&\n    Object.assign(params, {\n      sortField: sort.name,\n      sortType: sort.desc ? \"desc\" : \"asc\",\n    });\n  return params;\n};\n\nexport function setHttpAuth(token?: string) {\n  if (token) {\n    http.defaults.headers.Authorization = \"Bearer \" + token;\n  } else {\n    delete http.defaults.headers.Authorization;\n  }\n}\n","import React from \"react\";\nimport IconClose from \"@material-ui/icons/CloseOutlined\";\nimport { IconButton, Box } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\n\nexport const CloseButton = ({\n  name,\n  message,\n}: {\n  name: string;\n  message: string;\n}) => {\n  const { closeSnackbar } = useSnackbar();\n  const messages = message.split(\"\\n\");\n  return (\n    <Box\n      maxWidth={288}\n      marginTop={-10}\n      marginBottom={-10}\n      fontSize={messages.length > 1 ? 13 : undefined}\n    >\n      {messages.map((msg, index) => (\n        <div key={index}>{msg}</div>\n      ))}\n      <IconButton\n        size=\"small\"\n        style={{ position: \"absolute\", right: 12, top: 12 }}\n        onClick={() => closeSnackbar(name)}\n      >\n        <IconClose color=\"action\" fontSize={\"small\"} />\n      </IconButton>\n    </Box>\n  );\n};\n","import { http } from \"../../clients/Http\";\nimport { IResAuthLogin } from \"./index.d\";\nimport ApiConfig from \"config\";\nimport { Account } from \"models/account\";\n\nclass RepoAuth {\n  async login(email: string, password: string) {\n    console.log(\"api\", ApiConfig.API.AUTH_SERVICE);\n    const {\n      data: { data },\n    } = await http.post<IResAuthLogin>(ApiConfig.API.AUTH_SERVICE, {\n      email,\n      password,\n    });\n    return {\n      token: data!.access_token,\n      account: new Account(data!.userInfo),\n    };\n  }\n}\n\nexport const auth = new RepoAuth();\n","export class Completer<R = null> {\n  completed = false;\n  rejected = false;\n  promise!: Promise<R>;\n\n  resolve!: (value?: R | PromiseLike<R>) => void;\n  reject!: (error?: any) => void;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value?: any) => {\n        this.checkBadStack();\n        this.completed = true;\n        resolve(value);\n      };\n      this.reject = (error?: any, stackTrace?: string) => {\n        this.checkBadStack();\n        this.completed = true;\n        this.rejected = true;\n        reject(error);\n      };\n    });\n  }\n\n  private checkBadStack() {\n    if (this.completed) {\n      throw Error(\"Completer already completed!\");\n    }\n  }\n}\n","import { BaseModel, ModelStatus } from \"./base\";\n\nexport type IClinic = Pick<\n  Clinic,\n  | \"address\"\n  | \"businessNo\"\n  | \"code\"\n  | \"createdAt\"\n  | \"description\"\n  | \"email\"\n  | \"emailVerified\"\n  | \"logo\"\n  | \"name\"\n  | \"phoneNumber\"\n  | \"phoneNumberExt1\"\n  | \"phoneNumberExt2\"\n  | \"status\"\n  | \"tncAcceptance\"\n  | \"updatedAt\"\n  | \"id\"\n  | \"type\"\n>;\n\nexport class Clinic extends BaseModel {\n  constructor(props?: IClinic) {\n    super();\n    const date = (value: any) => new Date(value);\n    this.assign(props, {\n      updatedAt: date,\n    });\n    if (props?.id) {\n      this.createdAt = BaseModel.ObjectIDTime(props.id);\n    }\n  }\n\n  id = \"\";\n  address = \"\";\n  businessNo = \"\";\n  code = \"\";\n  description = \"\";\n  email = \"\";\n  emailVerified!: boolean;\n  logo = \"\";\n  name = \"\";\n  phoneNumber = \"\";\n  phoneNumberExt1 = \"\";\n  phoneNumberExt2 = \"\";\n  status = ModelStatus.INACTIVE;\n  tncAcceptance = false;\n  type?: string;\n  createdAt = new Date();\n  updatedAt = new Date();\n\n  get isActive() {\n    return this.status === ModelStatus.ACTIVE;\n  }\n}\n","import {IAccount, Account, ModelStatus} from \"./account\";\nimport { Specialty } from \"models/specialty\";\n\nexport type IDoctor = IAccount &\n  Pick<\n    Doctor,\n    | \"nationCode\"\n    | \"nationalityCode\"\n    | \"genderCode\"\n    | \"partner\"\n    | \"specialties\"\n    | \"education\"\n    | \"academicRankCode\"\n    | \"workplace\"\n    | \"diseasesConsultantCode\"\n    | \"jobTitle\"\n    | \"description\"\n    | \"status\"\n  >;\n\nexport class Doctor extends Account {\n  constructor(props?: IDoctor) {\n    super();\n    this.assign(props);\n  }\n\n  nationCode?: string;\n  nationalityCode?: string;\n\n  genderCode?: string;\n  partner?: { id: string; name: string };\n  specialties = Array<Specialty>();\n  workplace = Array<string>();\n  diseasesConsultantCode = Array<string>();\n\n  jobTitle = \"\";\n  education = \"\";\n  academicRankCode = \"\";\n  description = \"\";\n  status= ModelStatus.ACTIVE;\n}\n"],"sourceRoot":""}